{"version":3,"sources":["tenserFlow/index.js","models/girl/scene.glb","ThreeJs/Viewport.js","ThreeJs/Girl.js","models/people/maria.glb","ThreeJs/CarOne.js","models/sailormoon_test/scene.glb","ThreeJs/SailorMoon.js","models/people/goth.glb","ThreeJs/CarThree.js","ThreeJs/Box.js","models/subway_car_r62a/scene.glb","ThreeJs/Train.js","ThreeJs/FloorPlane.js","ThreeJs/SidePlane.js","ThreeJs/FrontPlane.js","store/position.js","ThreeJs/EndZone.js","store/gameState.js","firebase.js","store/leaderboard.js","store/time.js","store/index.js","components/RestartButton.js","ThreeJs/Game.js","components/leaderboard.js","components/TitleScreen.js","components/WinScreen.js","ThreeJs/Stopwatch.js","components/AudioPlayer.js","components/Github.js","components/Instructions.js","App.js","reportWebVitals.js","index.js"],"names":["recognizer","model","examples","INPUT_SHAPE","a","speechCommands","ensureModelLoaded","buildModel","console","log","collect","label","isListening","stopListening","listen","spectrogram","frameSize","data","vals","normalize","subarray","push","document","querySelector","textContent","length","overlapFactor","includeSpectrogram","invokeCallbackOnNoiseAndUnknown","x","map","train","toggleButtons","ys","tf","e","xsShape","xs","flatten","fit","batchSize","epochs","callbacks","onEpochEnd","epoch","logs","acc","toFixed","add","depthwiseConv2d","depthMultiplier","kernelSize","activation","inputShape","maxPooling2d","poolSize","strides","dense","units","optimizer","adam","compile","loss","metrics","enable","querySelectorAll","forEach","b","disabled","tensors","size","result","Float32Array","arr","i","set","moveSlider","labelTensor","prevValue","getElementById","value","prevValue2","delta","input","probs","predict","predLabel","argMax","probabilityThreshold","loadModel","Viewport","props","viewportRef","useRef","miniMapLocationLeftPixels","window","innerWidth","useFrame","gl","scene","camera","autoClear","setViewport","innerHeight","setScissor","setScissorTest","render","clearDepth","current","position","viewPosition","y","z","updateMatrixWorld","updateProjectionMatrix","OrthographicCamera","ref","zoom","rotation","Math","PI","left","frustumSize","right","top","bottom","far","near","baseVel","xVel","connect","state","girlPosition","gltf","useLoader","GLTFLoader","girl","useBox","mass","args","girlRef","api","endZonePosition","changeWin","changePlaying","action","setAction","velocity","frustumCulled","PerspectiveCamera","fov","makeDefault","object","scale","PointerLockControls","CarOne","gltfMaria","maria","mariaRef","SailorMoon","sailormoon","charRef","charTwoRef","charNineRef","charTenRef","charElevenRef","clone","CarThree","gltfjuliette","goth","julietteRef","Box","attach","transparent","opacity","Train","type","trainRef","dispose","wireframe","FloorPlane","usePlane","planeRef","receiveShadow","SidePlane","FrontPlane","GET_POSITION","INITIAL_STATE","EndZone","zoneRef","React","createRef","this","getPosition","color","Component","dispatch","GET_GAMESTATE","GAMESTATE_WIN","GAMESTATE_PLAYING","RESET_GAMESTATE","RESTART_GAMESTATE","isPlaying","hasWon","isPaused","courseCompleted","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","leaderboardRef","firestore","collection","GET_LEADERBOARD","ADD_TO_LEADERBOARD","getLeaderboard","leaderboard","addToLeaderboard","newRecord","UPDATE_TIME","reducer","combineReducers","gameState","time","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","RestartButton","resetGame","bind","restartGameState","id","onClick","Game","endPosition","updatePosition","voiceAction","changeVoiceCommandAction","callback","command","setState","colorManagement","shadowMap","Stars","radius","depth","count","intensity","castShadow","penumbra","lookAt","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-near","shadow-camera-far","gravity","fallback","Leaderboard","formatScore","fetchLeaderboard","minutes","seconds","milliseconds","elapsedTime","floor","toLocaleString","minimumIntegerDigits","useGrouping","Modal","centered","show","showModal","onHide","toggleLeaderboard","dialogClassName","className","Table","responsive","record","idx","name","score","orderBy","get","docs","doc","Title","toggleSfx","Audio","selectSfx","hoverSound","selectSound","volume","play","onMouseDown","onMouseUp","min","max","step","onMouseOver","WinScreen","submitted","submitScore","handleChange","target","preventDefault","onSubmit","htmlFor","required","placeholder","onChange","scoreRef","scoreData","Stopwatch","timer","startTime","performance","now","setInterval","innerHTML","clearInterval","updateTime","Player","url","useState","audio","playing","setPlaying","loop","toggle","useEffect","pause","addEventListener","initialAudio","event","removeEventListener","useAudio","src","alt","Github","href","rel","Instructions","toggleInstructions","prevState","App","granted","gameStatePlaying","gameStateWin","navigator","mediaDevices","getUserMedia","then","getPermission","permis","catch","permissions","query","permissionStatus","permiss","AudioPlayer","renderSwitch","getGameState","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.a396f539.chunk.js","sourcesContent":["import * as tf from \"@tensorflow/tfjs\";\nimport * as speechCommands from \"@tensorflow-models/speech-commands\";\n\nlet recognizer;\n// One frame is ~23ms of audio.\n// started at 3, multiplied by 13\nconst NUM_FRAMES = 39;\nlet examples = [];\nconst INPUT_SHAPE = [NUM_FRAMES, 232, 1];\nlet model;\n\nexport async function loadModel() {\n  try {\n    recognizer = speechCommands.create(\"BROWSER_FFT\");\n    // Make sure that the underlying model and metadata are loaded via HTTPS requests\n    await recognizer.ensureModelLoaded();\n    // words = recognizer.wordLabels();\n    // See the array of words that the recognizer is trained to recognize.\n    // console.log(recognizer.wordLabels());\n    buildModel();\n  } catch (err) {\n    console.log(err);\n  }\n}\nloadModel();\n\nexport function collect(label) {\n  if (recognizer.isListening()) {\n    return recognizer.stopListening();\n  }\n  if (label == null) {\n    return;\n  }\n\n  recognizer.listen(\n    async ({ spectrogram: { frameSize, data } }) => {\n      let vals = normalize(data.subarray(-frameSize * NUM_FRAMES));\n      examples.push({ vals, label });\n      document.querySelector(\n        \"#console\"\n      ).textContent = `${examples.length} examples collected`;\n    },\n    {\n      overlapFactor: 0.999,\n      includeSpectrogram: true,\n      invokeCallbackOnNoiseAndUnknown: true,\n    }\n  );\n}\n\nexport function normalize(x) {\n  const mean = -100;\n  const std = 10;\n  return x.map((x) => (x - mean) / std);\n}\n\nexport async function train() {\n  try {\n    toggleButtons(false);\n    // acknowleges 5 actions on model\n    const ys = tf.oneHot(\n      examples.map((e) => e.label),\n      5\n    );\n    const xsShape = [examples.length, ...INPUT_SHAPE];\n    const xs = tf.tensor(flatten(examples.map((e) => e.vals)), xsShape);\n    await model.fit(xs, ys, {\n      // batchSize: 16,\n      //40\n      batchSize: 208,\n      // epochs: 10,\n      //25\n      epochs: 130,\n      callbacks: {\n        onEpochEnd: (epoch, logs) => {\n          document.querySelector(\"#console\").textContent = `Accuracy: ${(\n            logs.acc * 100\n          ).toFixed(1)}% Epoch: ${epoch + 1}`;\n        },\n      },\n    });\n    tf.dispose([xs, ys]);\n    toggleButtons(true);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function buildModel() {\n  model = tf.sequential();\n  model.add(\n    tf.layers.depthwiseConv2d({\n      depthMultiplier: 8,\n      kernelSize: [NUM_FRAMES, 3],\n      activation: \"relu\",\n      inputShape: INPUT_SHAPE,\n    })\n  );\n  model.add(tf.layers.maxPooling2d({ poolSize: [1, 2], strides: [2, 2] }));\n  model.add(tf.layers.flatten());\n  // 5 actions\n  model.add(tf.layers.dense({ units: 5, activation: \"softmax\" }));\n  const optimizer = tf.train.adam(0.01);\n  model.compile({\n    optimizer,\n    loss: \"categoricalCrossentropy\",\n    metrics: [\"accuracy\"],\n  });\n}\n\nexport function toggleButtons(enable) {\n  document.querySelectorAll(\"button\").forEach((b) => (b.disabled = !enable));\n}\n\nexport function flatten(tensors) {\n  const size = tensors[0].length;\n  const result = new Float32Array(tensors.length * size);\n  tensors.forEach((arr, i) => result.set(arr, i * size));\n  return result;\n}\n\nasync function moveSlider(labelTensor) {\n  try {\n    const label = (await labelTensor.data())[0];\n    const prevValue = +document.getElementById(\"output\").value;\n    const prevValue2 = +document.getElementById(\"output2\").value;\n    document.getElementById(\"console\").textContent = label;\n    let delta = 0.1;\n    switch (label) {\n      case 0:\n        document.getElementById(\"output\").value = prevValue - delta;\n        break;\n      case 1:\n        document.getElementById(\"output\").value = prevValue + delta;\n        break;\n      case 3:\n        document.getElementById(\"output2\").value = prevValue2 - delta;\n        break;\n      case 4:\n        document.getElementById(\"output2\").value = prevValue2 + delta;\n        break;\n      default:\n        break;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n//training listening function\nexport function listen() {\n  if (recognizer.isListening()) {\n    recognizer.stopListening();\n    toggleButtons(true);\n    document.getElementById(\"listen\").textContent = \"Listen\";\n    return;\n  }\n  toggleButtons(false);\n  document.getElementById(\"listen\").textContent = \"Stop\";\n  document.getElementById(\"listen\").disabled = false;\n\n  recognizer.listen(\n    async ({ spectrogram: { frameSize, data } }) => {\n      const vals = normalize(data.subarray(-frameSize * NUM_FRAMES));\n      const input = tf.tensor(vals, [1, ...INPUT_SHAPE]);\n      const probs = model.predict(input);\n      const predLabel = probs.argMax(1);\n      await moveSlider(predLabel);\n      tf.dispose([input, probs, predLabel]);\n    },\n    {\n      overlapFactor: 0.999,\n      includeSpectrogram: true,\n      probabilityThreshold: 0.9,\n      // invokeCallbackOnNoiseAndUnknown: true,\n    }\n  );\n}\n// gameplay listening function\nexport function startListening(callback) {\n  recognizer.listen(\n    async ({ spectrogram: { frameSize, data } }) => {\n      const vals = normalize(data.subarray(-frameSize * NUM_FRAMES));\n      const input = tf.tensor(vals, [1, ...INPUT_SHAPE]);\n      const probs = model.predict(input);\n      const predLabel = probs.argMax(1);\n      await callback(predLabel);\n      tf.dispose([input, probs, predLabel]);\n    },\n    {\n      overlapFactor: 0.999,\n      includeSpectrogram: true,\n      probabilityThreshold: 0.9,\n      // probabilityThreshold: 0.9, <--- try adding this\n      // invokeCallbackOnNoiseAndUnknown: true, <----- changed\n    }\n  );\n}\n\n////////////////////////////////////\n\n// `listen()` takes two arguments:\n// 1. A callback function that is invoked anytime a word is recognized.\n// 2. A configuration object with adjustable fields such as\n//    - includeSpectrogram\n//    - probabilityThreshold\n//    - includeEmbedding\n// export function startListening(callback) {\n//   recognizer.listen(\n//     ({ scores }) => {\n//       // turn scores into a list of (score, word) pairs\n//       scores = Array.from(scores).map((s, i) => ({ score: s, word: words[i] }));\n//       // Find the most probable word\n//       scores.sort((s1, s2) => s2.score - s1.score);\n\n//       let command = scores[0].word;\n//       callback(command);\n//       // - result.scores contains the probability scores that correspond to recognizer.wordLabels().\n//       // - result.spectrogram contains the spectrogram of the recognized word.\n//     },\n//     {\n//       includeSpectrogram: true,\n//       probabilityThreshold: 0.9,\n//     }\n//   );\n// }\n\nexport function stopListening() {\n  recognizer.stopListening();\n}\n\nexport default recognizer;\n\n//plan: take console log model and copy it into a file, call the file and reference it for listening when the game starts\n","export default __webpack_public_path__ + \"static/media/scene.4ff4455c.glb\";","import React, { useRef } from \"react\";\nimport { useFrame } from \"react-three-fiber\";\nimport { OrthographicCamera } from \"@react-three/drei\";\n\nconst Viewport = (props) => {\n  const viewportRef = useRef();\n  const frustumSize = 800;\n\n  const miniMapLocationLeftPixels =\n    window.innerWidth - 8 - window.innerWidth * 0.2;\n  const miniMapLocationBottomPixels = 8;\n\n  useFrame(({ gl, scene, camera }) => {\n    gl.autoClear = true;\n    gl.setViewport(0, 0, window.innerWidth, window.innerHeight);\n    gl.setScissor(0, 0, window.innerWidth, window.innerHeight);\n    gl.setScissorTest(true);\n    gl.render(scene, camera);\n    gl.autoClear = false;\n    gl.clearDepth();\n\n    // render minicamera\n    gl.setViewport(\n      miniMapLocationLeftPixels,\n      miniMapLocationBottomPixels,\n      window.innerWidth * 0.2,\n      window.innerHeight * 0.2\n    );\n\n    gl.setScissor(\n      miniMapLocationLeftPixels,\n      miniMapLocationBottomPixels,\n      window.innerWidth * 0.2,\n      window.innerHeight * 0.2\n    );\n\n    gl.setScissorTest(true);\n    viewportRef.current.position.x = props.viewPosition.x;\n    viewportRef.current.position.y = 300;\n    viewportRef.current.position.z = props.viewPosition.z;\n    viewportRef.current.updateMatrixWorld();\n    viewportRef.current.updateProjectionMatrix();\n    gl.render(scene, viewportRef.current);\n  }, 1);\n\n  return (\n    <>\n      <OrthographicCamera\n        ref={viewportRef}\n        zoom={4.5}\n        rotation={[(Math.PI * -90) / 180, 0, 0]}\n        left={frustumSize / -2}\n        right={frustumSize / 2}\n        top={frustumSize / 2}\n        bottom={frustumSize / -2}\n        far={500}\n        near={250}\n      />\n    </>\n  );\n};\n\nexport default Viewport;\n","import React from \"react\";\nimport { useFrame, useLoader } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { useBox } from \"@react-three/cannon\";\nimport girl from \"../models/girl/scene.glb\";\nimport { PerspectiveCamera, PointerLockControls } from \"@react-three/drei\";\nimport Viewport from \"./Viewport\";\nimport { connect } from \"react-redux\";\n\nlet acc = 0;\nlet baseVel = 0;\nlet xVel = 0;\n\nconst Girl = (props) => {\n  //girlRef: girl's property in scene (read only)\n  //api: girl's physics object (methods to set/subscribe)\n  const gltf = useLoader(GLTFLoader, girl);\n\n  const [girlRef, api] = useBox(() => ({\n    mass: 6,\n    args: [6, 6, 6],\n    position: props.girlPosition,\n  }));\n\n  let girlPosition;\n  if (girlRef.current) {\n    girlPosition = girlRef.current.position;\n  }\n  const endZonePosition = props.position;\n\n  useFrame(() => {\n    if (\n      girlPosition.x >= endZonePosition.x - 10 &&\n      girlPosition.x <= endZonePosition.x + 10 &&\n      girlPosition.z >= endZonePosition.z - 10 &&\n      girlPosition.z <= endZonePosition.z + 10\n    ) {\n      props.stopListening();\n      props.changeWin();\n      props.changePlaying();\n    }\n\n    api.rotation.set(0, (Math.PI * -90) / 180, 0);\n    switch (props.action) {\n      case 1:\n        xVel += 10;\n        if (xVel >= 10) {\n          props.setAction(\"\");\n        }\n        break;\n      case 0:\n        xVel -= 10;\n        if (xVel <= -10) {\n          props.setAction(\"\");\n        }\n        break;\n      case 4:\n        baseVel = 20;\n        if (acc === 0) {\n          acc += 5;\n        }\n        props.setAction(\"\");\n        break;\n      case 3:\n        xVel = 0;\n        baseVel = 0;\n        acc = 0;\n        props.setAction(\"\");\n        break;\n      case 2:\n        props.setAction(\"\");\n        break;\n      default:\n        break;\n    }\n    api.velocity.set(xVel, -1, -(baseVel * acc));\n  });\n  return (\n    <>\n      <mesh ref={girlRef} frustumCulled={false}>\n        <PerspectiveCamera\n          fov={75}\n          near={0.1}\n          position={[15, 7.5, 0]}\n          rotation={[0, (Math.PI * 90) / 180, 0]}\n          makeDefault={true}\n        />\n        <primitive\n          object={gltf.scene}\n          scale={[5, 5, 5]}\n          rotation={[0, (Math.PI * -65) / 180, 0]}\n          position={[0, -7, 0]}\n        />\n        {/* <boxBufferGeometry attach=\"geometry\" args={[6, 6, 6]} />\n        <meshStandardMaterial wireframe={true} attach=\"material\" /> */}\n        <PointerLockControls />\n      </mesh>\n      <Viewport viewPosition={girlPosition} />\n    </>\n  );\n};\n\nconst mapState = (state) => ({\n  position: state.position,\n});\n\nexport default connect(mapState, null)(Girl);\n","export default __webpack_public_path__ + \"static/media/maria.56eb6240.glb\";","import React from \"react\";\nimport { useLoader } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport maria from \"../models/people/maria.glb\";\nimport { useBox } from \"@react-three/cannon\";\n\nconst CarOne = (props) => {\n  const gltfMaria = useLoader(GLTFLoader, maria);\n\n  const [mariaRef] = useBox(() => ({\n    mass: 1,\n    args: [6, 5, 6],\n    position: [3, 10, 120],\n    rotation: [0, (Math.PI * -25) / 180, 0],\n  }));\n\n  return (\n    <>\n      <mesh ref={mariaRef}>\n        <primitive object={gltfMaria.scene} scale={[8, 8, 8]} />\n      </mesh>\n    </>\n  );\n};\n\nexport default CarOne;\n","export default __webpack_public_path__ + \"static/media/scene.f3c54604.glb\";","import React from \"react\";\nimport { useLoader } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport sailormoon from \"../models/sailormoon_test/scene.glb\";\nimport { useBox } from \"@react-three/cannon\";\n\nconst SailorMoon = (props) => {\n  const gltf = useLoader(GLTFLoader, sailormoon);\n\n  const [charRef] = useBox(() => ({\n    mass: 2,\n    args: [3, 6, 3],\n    position: [-8, 2, -50],\n  }));\n\n  const [charTwoRef] = useBox(() => ({\n    mass: 2,\n    args: [3, 6, 3],\n    position: [0, 2, -30],\n    rotation: [0, (Math.PI * -65) / 180, 0],\n  }));\n\n  const [charNineRef] = useBox(() => ({\n    mass: 2,\n    args: [3, 6, 3],\n    position: [8, 2, -50],\n    rotation: [0, (Math.PI * -80) / 180, 0],\n  }));\n\n  const [charTenRef] = useBox(() => ({\n    mass: 2,\n    args: [3, 6, 3],\n    position: [10, 2, -35],\n    rotation: [0, (Math.PI * -80) / 180, 0],\n  }));\n\n  const [charElevenRef] = useBox(() => ({\n    mass: 2,\n    args: [3, 6, 3],\n    position: [0, 2, -45],\n    rotation: [0, (Math.PI * -80) / 180, 0],\n  }));\n\n  return (\n    <>\n      <mesh ref={charRef}>\n        <primitive object={gltf.scene} scale={[7, 7, 7]} />\n      </mesh>\n      <mesh ref={charTwoRef}>\n        <primitive object={gltf.scene.clone(true)} scale={[7, 7, 7]} />\n      </mesh>\n      <mesh ref={charNineRef}>\n        <primitive object={gltf.scene.clone(true)} scale={[7, 7, 7]} />\n      </mesh>\n      <mesh ref={charTenRef}>\n        <primitive object={gltf.scene.clone(true)} scale={[7, 7, 7]} />\n      </mesh>\n      <mesh ref={charElevenRef}>\n        <primitive object={gltf.scene.clone(true)} scale={[7, 7, 7]} />\n      </mesh>\n    </>\n  );\n};\n\nexport default SailorMoon;\n","export default __webpack_public_path__ + \"static/media/goth.ea91a7a1.glb\";","import React from \"react\";\nimport { useLoader } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport goth from \"../models/people/goth.glb\";\nimport { useBox } from \"@react-three/cannon\";\n\nconst CarThree = (props) => {\n  const gltfjuliette = useLoader(GLTFLoader, goth);\n\n  const [julietteRef] = useBox(() => ({\n    mass: 1,\n    args: [7, 5, 7],\n    position: [4, 0, -340],\n    rotation: [0, (Math.PI * -25) / 180, 0],\n  }));\n\n  return (\n    <>\n      <mesh ref={julietteRef}>\n        <primitive\n          object={gltfjuliette.scene}\n          scale={[0.25, 0.25, 0.25]}\n          position={[0, -3, 0]}\n        />\n      </mesh>\n    </>\n  );\n};\n\nexport default CarThree;\n","import React from \"react\";\n\nconst Box = () => {\n  return (\n    <mesh>\n      <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\n      <meshStandardMaterial attach=\"material\" transparent opacity={300} />\n    </mesh>\n  );\n};\n\nexport default Box;\n","export default __webpack_public_path__ + \"static/media/scene.2ce1c094.glb\";","import React from \"react\";\nimport { useLoader } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { useBox } from \"@react-three/cannon\";\nimport train from \"../models/subway_car_r62a/scene.glb\";\n// import train from \"../models/subway_train_interior/scene.glb\";\n\nconst Train = (props) => {\n  //trainRef: train's property in scene (read only)\n  //api: train's physics object (methods to set/subscribe)\n  const { scene } = useLoader(GLTFLoader, train);\n  const [trainRef] = useBox(() => ({\n    type: \"Kinematic\",\n    args: [4.7, 1.1, 2],\n    position: props.position,\n    rotation: props.rotation,\n  }));\n\n  return (\n    <>\n      <mesh ref={trainRef}>\n        <group dispose={null}>\n          <primitive object={scene} scale={[0.04, 0.04, 0.04]} />\n          <primitive\n            object={scene.clone(true)}\n            scale={[0.04, 0.04, 0.04]}\n            position={[props.position[0] + 190, 0, 0]}\n          />\n          <primitive\n            object={scene.clone(true)}\n            scale={[0.04, 0.04, 0.04]}\n            position={[props.position[0] + 370, 0, 0]}\n          />\n          <primitive\n            object={scene.clone(true)}\n            scale={[0.04, 0.04, 0.04]}\n            position={[props.position[0] + 550, 0, 0]}\n          />\n          {/* <primitive\n            object={scene.clone(true)}\n            scale={[0.04, 0.04, 0.04]}\n            position={[props.position[0] + 730, 0, 0]}\n          /> */}\n          {/* <primitive\n            object={scene.clone(true)}\n            scale={[1, 1, 1]}\n            position={[\n              props.position[0],\n              props.position[1],\n              props.position[2] - 180,\n            ]}\n          />\n          <primitive\n            object={scene.clone(true)}\n            scale={[1, 1, 1]}\n            position={[\n              props.position[0],\n              props.position[1],\n              props.position[2] - 620,\n            ]}\n            rotation={[0, (Math.PI * 180) / 180, 0]}\n          />\n          <primitive\n            object={scene.clone(true)}\n            scale={[1, 1, 1]}\n            position={[\n              props.position[0],\n              props.position[1],\n              props.position[2] - 620,\n            ]}\n          />\n          <primitive\n            object={scene.clone(true)}\n            scale={[1, 1, 1]}\n            position={[\n              props.position[0],\n              props.position[1],\n              props.position[2] - 860,\n            ]}\n            rotation={[0, (Math.PI * 180) / 180, 0]}\n          />\n          <primitive\n            object={scene.clone(true)}\n            scale={[1, 1, 1]}\n            position={[\n              props.position[0],\n              props.position[1],\n              props.position[2] - 860,\n            ]}\n          /> */}\n        </group>\n        <meshStandardMaterial wireframe={true} attach=\"material\" />\n      </mesh>\n    </>\n  );\n};\n\nexport default Train;\n","import React from \"react\";\nimport { usePlane } from \"@react-three/cannon\";\n\nconst FloorPlane = (props) => {\n  const [planeRef] = usePlane(() => ({\n    // rotation: props.rotation,\n    position: props.position,\n    mass: 0,\n    ...props,\n  }));\n\n  return (\n    <mesh ref={planeRef} receiveShadow>\n      <planeBufferGeometry attach=\"geometry\" args={[45, 1450]} />\n      <meshStandardMaterial attach=\"material\" transparent={true} opacity={0} />\n    </mesh>\n  );\n};\n\nexport default FloorPlane;\n","import React from \"react\";\nimport { usePlane } from \"@react-three/cannon\";\n\nconst SidePlane = (props) => {\n  const [planeRef] = usePlane(() => ({\n    rotation: props.rotation,\n    position: props.position,\n    mass: 0,\n    ...props,\n  }));\n\n  return (\n    <mesh ref={planeRef}>\n      <planeBufferGeometry attach=\"geometry\" args={[1400, 20]} />\n      <meshStandardMaterial attach=\"material\" transparent={true} opacity={0} />\n    </mesh>\n  );\n};\n\nexport default SidePlane;\n","import React from \"react\";\nimport { usePlane } from \"@react-three/cannon\";\n\nconst FrontPlane = (props) => {\n  const [planeRef] = usePlane(() => ({\n    rotation: props.rotation,\n    position: props.position,\n    mass: 0,\n    ...props,\n  }));\n\n  return (\n    <mesh ref={planeRef}>\n      <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\n      <meshStandardMaterial attach=\"material\" transparent={true} opacity={0} />\n    </mesh>\n  );\n};\n\nexport default FrontPlane;\n","/**\n * ACTION TYPES\n */\nconst GET_POSITION = \"GET_POSITION\";\n\n/**\n * INITIAL STATE\n */\nconst INITIAL_STATE = {};\n\n/**\n * ACTION CREATORS\n */\n\nexport const getPosition = (position) => ({\n  type: GET_POSITION,\n  position,\n});\n\n/**\n * REDUCER\n */\n\nexport default function leaderboardReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case GET_POSITION:\n      return action.position;\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPosition } from \"../store/position\";\n\nclass EndZone extends React.Component {\n  constructor() {\n    super();\n    this.zoneRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.getPosition(this.zoneRef.current.position);\n  }\n\n  render() {\n    return (\n      <mesh ref={this.zoneRef} position={[-2, 0, -450]}>\n        <boxBufferGeometry attach=\"geometry\" args={[30, 50, 20]} />\n        <meshStandardMaterial\n          wireframe={false}\n          attach=\"material\"\n          color=\"yellow\"\n          transparent\n          opacity={0.6}\n        />\n      </mesh>\n    );\n  }\n}\n\nconst mapDispatch = (dispatch) => ({\n  getPosition: (position) => dispatch(getPosition(position)),\n});\n\nexport default connect(null, mapDispatch)(EndZone);\n","/**\n * ACTION TYPES\n */\nconst GET_GAMESTATE = \"GET_GAMESTATE\";\nconst GAMESTATE_WIN = \"GAMESTATE_WIN\";\nconst GAMESTATE_PLAYING = \"GAMESTATE_PLAYING\";\nconst RESET_GAMESTATE = \"RESET_GAMESTATE\";\nconst RESTART_GAMESTATE = \"RESTART_GAME_STATE\";\n\n/**\n * INITIAL STATE\n */\n\n//calculate randomized start/endzone (could be two separate arrays with different combinations)\n//eg, if endzone A, then start is A, if enzone B, then start is B.\nconst INITIAL_STATE = {\n  isPlaying: false,\n  hasWon: false,\n  isPaused: false,\n  courseCompleted: false,\n};\n\n/**\n * ACTION CREATORS\n */\n\nexport const getGameState = () => ({\n  type: GET_GAMESTATE,\n});\n\nexport const gameStateWin = (hasWon) => ({\n  type: GAMESTATE_WIN,\n  hasWon,\n});\n\nexport const gameStatePlaying = (isPlaying) => ({\n  type: GAMESTATE_PLAYING,\n  isPlaying,\n});\n\nexport const resetGameState = () => ({\n  type: RESET_GAMESTATE,\n});\n\nexport const restartGameState = () => ({\n  type: RESTART_GAMESTATE,\n});\n\n/**\n * THUNK CREATORS\n */\n\n/**\n * REDUCER\n */\nexport default function gameStateReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case GET_GAMESTATE:\n      return state;\n    case GAMESTATE_WIN:\n      return { ...state, hasWon: action.hasWon };\n    case GAMESTATE_PLAYING:\n      return { ...state, isPlaying: action.isPlaying };\n    case RESET_GAMESTATE:\n      return { ...state, isPlaying: true, hasWon: false };\n    case RESTART_GAMESTATE:\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n}\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCDIEz8pqLI9IAt5bgXYy90t7iw_zLtUEA\",\n  authDomain: \"city-walker.firebaseapp.com\",\n  projectId: \"city-walker\",\n  storageBucket: \"city-walker.appspot.com\",\n  messagingSenderId: \"234520776294\",\n  appId: \"1:234520776294:web:0a9c644ab3eb85f06e67a7\",\n  measurementId: \"G-NELH08XYYR\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n// firebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;\n","import firebase from \"../firebase\";\n\n// Inititializing firebase database\n// Saving reference to leaderboard table\nconst db = firebase.firestore();\nconst leaderboardRef = db.collection(\"leaderboard\");\n\n/**\n * ACTION TYPES\n */\nconst GET_LEADERBOARD = \"GET_LEADERBOARD\";\nconst ADD_TO_LEADERBOARD = \"ADD_TO_LEADERBOARD\";\n\n/**\n * INITIAL STATE\n */\nconst INITIAL_STATE = [];\n\n/**\n * ACTION CREATORS\n */\nconst getLeaderboard = (leaderboard) => ({\n  type: GET_LEADERBOARD,\n  leaderboard,\n});\n\nconst addToLeaderboard = (newRecord) => ({\n  type: ADD_TO_LEADERBOARD,\n  newRecord,\n});\n\n/**\n * THUNK CREATORS\n */\n//move async to the top\nexport const fetchLeaderboard = () => {\n  return async (dispatch) => {\n    try {\n      const data = await leaderboardRef.orderBy(\"score\").get();\n      const leaderboard = data.docs.map((doc) => doc.data());\n      dispatch(getLeaderboard(leaderboard));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const addRecordToDb = (newRecord) => {\n  return async (dispatch) => {\n    try {\n      const scoreRef = leaderboardRef.doc();\n      const scoreData = await scoreRef.set(newRecord);\n      dispatch(addToLeaderboard(scoreData.data()));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\n/**\n * REDUCER\n */\nexport default function leaderboardReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case GET_LEADERBOARD:\n      return action.leaderboard;\n    case ADD_TO_LEADERBOARD:\n      return [...state, action.newRecord];\n    default:\n      return state;\n  }\n}\n","/**\n * ACTION TYPES\n */\nconst UPDATE_TIME = 'UPDATE_TIME'\n\n/**\n * INITIAL STATE\n */\nconst INITIAL_STATE = null\n\n/**\n * ACTION CREATORS\n */\n\nexport const updateTime = (time) => ({\n   type: UPDATE_TIME,\n   time\n })\n\n /**\n * REDUCER\n */\n\nexport default function timeReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case UPDATE_TIME:\n      return action.time;\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport gameState from \"./gameState\";\nimport leaderboard from \"./leaderboard\";\nimport position from \"./position\";\nimport time from \"./time\";\n\nconst reducer = combineReducers({\n  gameState,\n  leaderboard,\n  position,\n  time,\n});\n// const middleware = composeWithDevTools(\n//   applyMiddleware(thunkMiddleware, createLogger({ collapsed: true }))\n// );\nconst middleware = composeWithDevTools(applyMiddleware(thunkMiddleware));\nconst store = createStore(reducer, middleware);\n\n// const store = createStore(\n//   reducer,\n//   compose(\n//     applyMiddleware(thunk.withExtraArgument({ getFirestore })),\n//     reduxFirestore(firebase)\n//   )\n// );\n\nexport default store;\n","import React from 'react';\nimport { restartGameState } from '../store/gameState';\nimport { connect } from 'react-redux'\n\nclass RestartButton extends React.Component{\n  constructor() {\n    super()\n    this.resetGame = this.resetGame.bind(this)\n  }\n\n  resetGame() {\n    this.props.restartGameState()\n  }\n\n  render() {\n    return (\n      <button id=\"restart-button\" onClick={this.resetGame}>RESTART</button>\n    )\n  }\n}\n\nconst mapDispatch = (dispatch) => ({\n  restartGameState: () => dispatch(restartGameState())\n})\n\nexport default connect(null, mapDispatch)(RestartButton)\n","import React, { Suspense } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport { stopListening, startListening } from \"../tenserFlow\";\nimport { Stars } from \"@react-three/drei\";\nimport { Physics } from \"@react-three/cannon\";\nimport Girl from \"./Girl\";\nimport CarOne from \"./CarOne\";\nimport SailorMoon from \"./SailorMoon\";\nimport CarThree from \"./CarThree\";\nimport Box from \"./Box\";\nimport Train from \"./Train\";\nimport FloorPlane from \"./FloorPlane\";\nimport SidePlane from \"./SidePlane\";\nimport FrontPlane from \"./FrontPlane\";\nimport EndZone from \"./EndZone\";\nimport store from \"../store\";\nimport RestartButton from \"../components/RestartButton\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      endPosition: {},\n      action: \"\",\n    };\n    this.updatePosition = this.updatePosition.bind(this);\n    this.voiceAction = this.voiceAction.bind(this);\n    this.changeVoiceCommandAction = this.changeVoiceCommandAction.bind(this);\n  }\n\n  componentDidMount() {\n    startListening(this.voiceAction);\n  }\n\n  async voiceAction(labelTensor) {\n    try {\n      if (labelTensor.data) {\n        const command = (await labelTensor.data())[0];\n        this.changeVoiceCommandAction(command);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  changeVoiceCommandAction(command) {\n    this.setState({\n      action: command,\n    });\n    console.log(\"voice command:\", this.state.action);\n  }\n\n  updatePosition(endPosition) {\n    this.setState({\n      endPosition: endPosition,\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <RestartButton />\n        <Canvas colorManagement shadowMap>\n          <Stars radius={100} depth={800} count={50000} />\n          <hemisphereLight intensity={0.5} />\n          <ambientLight intensity={0.2} />\n          <spotLight\n            castShadow\n            penumbra={1}\n            intensity={2}\n            position={[150, 300, -150]}\n            lookAt={[0, 0, 300]}\n            shadow-mapSize-width={512}\n            shadow-mapSize-height={512}\n            shadow-camera-near={0.1}\n            shadow-camera-far={500}\n          />\n          <Physics gravity={[0, -100, 0]}>\n            <FloorPlane\n              rotation={[-(Math.PI / 2), 0, 0]}\n              position={[0, 1, 0]}\n            />\n            <EndZone store={store} />\n            <Suspense fallback={<Box />}>\n              <Girl\n                action={this.state.action}\n                girlPosition={[0, 0, 200]}\n                stopListening={stopListening}\n                changeWin={this.props.changeWin}\n                setAction={this.voiceAction}\n                changePlaying={this.props.changePlaying}\n                store={store}\n              />\n              <CarOne />\n              <CarThree />\n              <SailorMoon />\n            </Suspense>\n            <Train rotation={[0, Math.PI / 2, 0]} position={[-11, 15, 160]} />\n            <FrontPlane position={[0, 0, -800]} />\n            <SidePlane\n              rotation={[0, -Math.PI / 2, 0]}\n              position={[13, 0, -200]}\n            />\n            <SidePlane\n              rotation={[0, Math.PI / 2, 0]}\n              position={[-15, 0, -200]}\n            />\n          </Physics>\n        </Canvas>\n      </>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchLeaderboard } from \"../store/leaderboard\";\nimport { Modal, Table } from \"react-bootstrap\";\n\nclass Leaderboard extends React.Component {\n  constructor() {\n    super();\n    this.formatScore = this.formatScore.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchLeaderboard();\n    console.log(\"Loading leaderboard\");\n  }\n\n  formatScore(time) {\n    if (!time) {\n      return `00:00:00`;\n    } else {\n      let elapsedTime = time;\n      let minutes, seconds, milliseconds;\n      minutes = Math.floor(elapsedTime / 60).toLocaleString(\"en-US\", {\n        minimumIntegerDigits: 2,\n        useGrouping: false,\n      }); //00 always two digits\n      seconds = Math.floor(elapsedTime - minutes * 60).toLocaleString(\"en-US\", {\n        minimumIntegerDigits: 2,\n        useGrouping: false,\n      }); //00 always two digits\n      milliseconds = Math.floor((elapsedTime % 1) * 100).toLocaleString(\n        \"en-US\",\n        { minimumIntegerDigits: 2, useGrouping: false }\n      ); //always two digits\n      //add penalty to elapsedTime\n      //update state's elapsedTime for leaderboar\n      return `${minutes}:${seconds}:${milliseconds}`;\n    }\n  }\n\n  render() {\n    const leaderboard = this.props.leaderboard || [];\n\n    return (\n      <Modal\n        centered\n        show={this.props.showModal}\n        onHide={this.props.toggleLeaderboard}\n        dialogClassName=\"leaderboard-modal\"\n      >\n        <div>\n          <h1>Midnight Train Leaderboard</h1>\n          <div className=\"table-shell\">\n            <Table responsive>\n              <thead>\n                <tr>\n                  <th></th>\n                  <th>Name</th>\n                  <th>Course Time</th>\n                </tr>\n              </thead>\n              <tbody>\n                {leaderboard.map((record, idx) => (\n                  <tr key={idx}>\n                    <td></td>\n                    <td>{record.name}</td>\n                    <td>\n                      <i>{this.formatScore(record.score)}</i>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </div>\n          <button onClick={this.props.toggleLeaderboard}>\n            Close Leaderboard\n          </button>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  leaderboard: state.leaderboard,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchLeaderboard: () => dispatch(fetchLeaderboard()),\n});\n\nexport default connect(mapState, mapDispatch)(Leaderboard);\n","import React from \"react\";\nimport Leaderboard from \"./leaderboard\";\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n    };\n    this.hoverSound = this.hoverSound.bind(this);\n    this.selectSound = this.selectSound.bind(this);\n    this.toggleLeaderboard = this.toggleLeaderboard.bind(this);\n  }\n  toggleSfx = new Audio(\"./sfx/toggle.mp3\");\n  selectSfx = new Audio(\"./sfx/select.mp3\");\n\n  hoverSound() {\n    this.toggleSfx.volume = 0.5;\n    this.toggleSfx.play();\n  }\n\n  selectSound() {\n    this.selectSfx.volume = 0.5;\n    this.selectSfx.play();\n  }\n\n  toggleLeaderboard() {\n    this.selectSound();\n    this.setState({\n      showModal: !this.state.showModal,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <div className=\"title\">\n          <h1>Midnight Train</h1>\n        </div>\n        <div className=\"message\">\n          <h2>A customized voice-command driven 3D interactive simulation</h2>\n          <p>Train your player commands</p>\n        </div>\n        <div id=\"ml-button-row\">\n          <button\n            id=\"left\"\n            className=\"all-buttons\"\n            onMouseDown={() => this.props.collect(0)}\n            onMouseUp={() => this.props.collect(null)}\n          >\n            Left\n          </button>\n          <button\n            id=\"right\"\n            className=\"all-buttons\"\n            onMouseDown={() => this.props.collect(1)}\n            onMouseUp={() => this.props.collect(null)}\n          >\n            Right\n          </button>\n          <button\n            id=\"stop\"\n            className=\"all-buttons\"\n            onMouseDown={() => this.props.collect(3)}\n            onMouseUp={() => this.props.collect(null)}\n          >\n            Stop\n          </button>\n          <button\n            id=\"go\"\n            className=\"all-buttons\"\n            onMouseDown={() => this.props.collect(4)}\n            onMouseUp={() => this.props.collect(null)}\n          >\n            Go\n          </button>\n          <button\n            id=\"noise\"\n            className=\"all-buttons\"\n            onMouseDown={() => this.props.collect(2)}\n            onMouseUp={() => this.props.collect(null)}\n          >\n            Noise\n          </button>\n          <button\n            id=\"train\"\n            className=\"all-buttons\"\n            onClick={() => this.props.train()}\n          >\n            Train\n          </button>\n          <button\n            id=\"listen\"\n            className=\"all-buttons\"\n            onClick={() => this.props.listen()}\n          >\n            Test\n          </button>\n        </div>\n        <div id=\"slider-row\">\n          <div className=\"slider-row-ind\">\n            <p>Left</p>\n            <input type=\"range\" id=\"output\" min={0} max={10} step={0.1}></input>\n            <p>Right</p>\n          </div>\n          <div className=\"slider-row-ind\">\n            <p>Stop</p>\n            <input\n              type=\"range\"\n              id=\"output2\"\n              min={0}\n              max={10}\n              step={0.1}\n            ></input>\n            <p>Go</p>\n          </div>\n        </div>\n        <div id=\"console\"></div>\n        <div id=\"button-row\">\n          <button\n            id=\"leaderboard-button\"\n            className=\"all-buttons\"\n            onMouseOver={this.hoverSound}\n            onClick={this.toggleLeaderboard}\n          >\n            Leaderboard\n          </button>\n          {this.state.showModal && (\n            <Leaderboard\n              showModal={this.state.showModal}\n              toggleLeaderboard={this.toggleLeaderboard}\n            />\n          )}\n          <button\n            id=\"playButton\"\n            className=\"all-buttons\"\n            onMouseOver={() => this.hoverSound()}\n            onClick={() => (this.props.changePlaying(), this.selectSound())}\n          >\n            Ride\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addRecordToDb } from \"../store/leaderboard\";\nimport { resetGameState } from \"../store/gameState\";\nimport Leaderboard from \"./leaderboard\";\n\nclass WinScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      showModal: false,\n      submitted: false,\n    };\n    this.submitScore = this.submitScore.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n    this.toggleLeaderboard = this.toggleLeaderboard.bind(this);\n    this.hoverSound = this.hoverSound.bind(this);\n    this.selectSound = this.selectSound.bind(this);\n  }\n  toggleSfx = new Audio(\"./sfx/toggle.mp3\");\n  selectSfx = new Audio(\"./sfx/select.mp3\");\n\n  hoverSound() {\n    this.toggleSfx.volume = 0.5;\n    this.toggleSfx.play();\n  }\n\n  selectSound() {\n    this.selectSfx.volume = 0.5;\n    this.selectSfx.play();\n  }\n\n  handleChange(e) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  submitScore(e) {\n    e.preventDefault();\n    this.selectSound();\n    this.props.addToLeaderboard({\n      name: this.state.name,\n      score: this.props.time,\n    });\n    this.setState({\n      submitted: true,\n    });\n  }\n\n  resetGame() {\n    this.selectSound();\n    this.props.resetGame();\n  }\n\n  toggleLeaderboard() {\n    this.selectSound();\n    this.setState({\n      showModal: !this.state.showModal,\n    });\n  }\n\n  render() {\n    let elapsedTime = this.props.time;\n    let minutes, seconds, milliseconds;\n    minutes = Math.floor(elapsedTime / 60).toLocaleString(\"en-US\", {\n      minimumIntegerDigits: 2,\n      useGrouping: false,\n    }); //00 always two digits\n    seconds = Math.floor(elapsedTime - minutes * 60).toLocaleString(\"en-US\", {\n      minimumIntegerDigits: 2,\n      useGrouping: false,\n    }); //00 always two digits\n    milliseconds = Math.floor((elapsedTime % 1) * 100).toLocaleString(\"en-US\", {\n      minimumIntegerDigits: 2,\n      useGrouping: false,\n    }); //always two digits\n    //add penalty to elapsedTime\n    //update state's elapsedTime for leaderboar\n    elapsedTime = `${minutes}:${seconds}:${milliseconds}`;\n\n    return (\n      <div className=\"home\">\n        <div className=\"title\">\n          <h1>Course Complete</h1>\n        </div>\n        <div className=\"message\">\n          <h2>\n            Your time is <strong>{elapsedTime}</strong>\n          </h2>\n          {!this.state.submitted && <p>Add to leaderboard?</p>}\n          {!this.state.submitted ? (\n            <form id=\"score-submission\" onSubmit={(e) => this.submitScore(e)}>\n              <label htmlFor=\"name\">Name</label>\n              <div id=\"score-input\">\n                <input\n                  required\n                  name=\"name\"\n                  placeholder=\"ABC\"\n                  type=\"text\"\n                  value={this.state.name}\n                  onChange={(e) => this.handleChange(e)}\n                />\n                <button onMouseOver={this.hoverSound} type=\"submit\">\n                  Submit\n                </button>\n              </div>\n            </form>\n          ) : (\n            <div>\n              <h2>\n                <strong>Score Submitted</strong>\n              </h2>\n            </div>\n          )}\n        </div>\n        <div id=\"button-row\">\n          <button\n            className=\"all-buttons\"\n            id=\"leaderboard-button\"\n            onMouseOver={this.hoverSound}\n            onClick={this.toggleLeaderboard}\n          >\n            Leaderboard\n          </button>\n          {this.state.showModal && (\n            <Leaderboard\n              showModal={this.state.showModal}\n              toggleLeaderboard={this.toggleLeaderboard}\n            />\n          )}\n          <button\n            className=\"all-buttons\"\n            id=\"playButton\"\n            onMouseOver={this.hoverSound}\n            onClick={this.resetGame}\n          >\n            Play again?\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  time: state.time,\n  leaderboard: state.leaderboard,\n  gameState: state.gameState,\n});\n\nconst mapDispatch = (dispatch) => ({\n  addToLeaderboard: (score) => dispatch(addRecordToDb(score)),\n  resetGame: () => dispatch(resetGameState()),\n});\n\nexport default connect(mapState, mapDispatch)(WinScreen);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { updateTime } from '../store/time';\n\nclass Stopwatch extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      startTime: performance.now(),\n      elapsedTime: '',\n    };\n  }\n\n  timer = 0\n  componentDidMount() {\n    //if paused, calculate the pause time (dont subtract and display until unpaused)\n    //while paused, elapsedTime = elapsedTime - pauseTime.\n    this.timer = setInterval(() => {\n      let elapsedTime =\n        Math.floor(performance.now() - this.state.startTime) / 1000;\n      this.setState({\n        elapsedTime,\n      });\n      let minutes, seconds, milliseconds;\n      minutes = Math.floor(elapsedTime / 60).toLocaleString('en-US', {\n        minimumIntegerDigits: 2,\n        useGrouping: false,\n      }); //00 always two digits\n      seconds = Math.floor(elapsedTime - minutes * 60).toLocaleString('en-US', {\n        minimumIntegerDigits: 2,\n        useGrouping: false,\n      }); //00 always two digits\n      milliseconds = Math.floor((elapsedTime % 1) * 100).toLocaleString(\n        'en-US',\n        { minimumIntegerDigits: 2, useGrouping: false }\n      ); //always two digits\n      //add penalty to elapsedTime\n      //update state's elapsedTime for leaderboar\n      document.getElementById(\n        'elapsed-time'\n      ).innerHTML = `${minutes}:${seconds}:${milliseconds}`;\n      //else ...endTimer and display only elapsedTime with penalty\n    }, 10);\n  }\n\n  componentWillUnmount() {\n    // this.props.updateTime(this.state.elapsedTime)\n    clearInterval(this.timer)\n  }\n\n  resetTime() {\n    this.setState({\n      startTime: performance.now(),\n    });\n  }\n\n  render() {\n    this.props.updateTime(this.state.elapsedTime)\n    return (\n      <div id=\"stopwatch\">\n        <div id=\"elapsed-time\" />\n        <hr />\n        <p id=\"elapsed-label\">ELAPSED TIME</p>\n      </div>\n    );\n  }\n}\n\nconst mapDispatch = (dispatch) => ({\n  updateTime: (time) => dispatch(updateTime(time))\n})\n\nexport default connect(null, mapDispatch)(Stopwatch);\n","import React, { useState, useEffect } from \"react\";\n\nconst useAudio = (url) => {\n  const [audio] = useState(new Audio(\"./music/E-Saggila-Aziza.wav\"));\n  const [playing, setPlaying] = useState(false);\n  audio.volume = 0.2;\n  audio.loop = true;\n  const toggle = () => {\n    setPlaying(!playing);\n  };\n\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  }, [playing, audio]);\n\n  useEffect(() => {\n    const initialAudio = function (event) {\n      toggle();\n      window.removeEventListener(\"click\", initialAudio, false);\n    };\n    window.addEventListener(\"click\", initialAudio, false);\n\n    audio.addEventListener(\"ended\", () => setPlaying(false));\n    return () => {\n      audio.removeEventListener(\"ended\", () => setPlaying(false));\n    };\n  }, []);\n  return [playing, toggle];\n};\n\nconst Player = ({ url }) => {\n  const [playing, toggle] = useAudio(url);\n\n  return (\n    <div id=\"audio-player\">\n      <button id=\"audio-button\" onClick={toggle}>\n        <img src=\"./icon/audio.png\" alt=\"play-audio-icon\" />\n      </button>\n      {playing && (\n        <div id=\"song-info\">\n          <h3>Aziza</h3>\n          <h4>E-Saggila</h4>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\n\nconst Github = (props) => {\n  return (\n    <div id=\"github\">\n      <a\n        href=\"https://github.com/hannahrobot/city-walker\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <img src=\"./icon/github.png\" alt=\"link-to-github-repo\" />\n      </a>\n    </div>\n  );\n};\n\nexport default Github;\n","import React from \"react\";\nimport { Modal, Table } from \"react-bootstrap\";\n\nclass Instructions extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showModal: true,\n    };\n    this.toggleInstructions = this.toggleInstructions.bind(this);\n  }\n\n  toggleInstructions() {\n    this.setState((prevState) => ({\n      showModal: !prevState.showModal,\n    }));\n  }\n\n  render() {\n    return (\n      <>\n        <button id=\"instruction-button\" onClick={this.toggleInstructions}>\n          i\n        </button>\n\n        <Modal\n          centered\n          show={this.state.showModal}\n          onHide={this.toggleInstructions}\n          dialogClassName=\"instruction-modal\"\n        >\n          <div>\n            <h1>Riding simulation requires use of device microphone</h1>\n          </div>\n          <div className=\"table-shell\">\n            {/* <p>\n              How to train commands: While holding each button down (\n              <div>\n                <button>Left</button>\n                <button>Right</button>\n                <button>Stop</button>\n                <button>Go</button>\n              </div>\n              ) repeatedly state a one syllable word to represent the direction,\n              collecting around around 800 examples for each (examples are seen\n              incrementing below buttons). Additionally, press the\n              <div>\n                <button>Noise</button>\n              </div>\n              button whichout any audio imput so that it can measure your\n              background noise. When you are finished collecting samples, click\n              <div>\n                <button>Train</button>\n              </div>\n              . When epoch reaches 130, click [Test] to test your voice samples.\n              If the sliders move accurately, click [Ride] and begin the\n              simulation.\n            </p>\n            <p>\n              How to play: Navigate from your start position to the yellow end\n              zone. Only clear, concise verbal commands will drive the car.\n            </p> */}\n            <Table responsive>\n              <thead>\n                <tr>\n                  <th>Buttons</th>\n                  <th>Instructions</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>Go</td>\n                  <td>\n                    Hold down and repeatedly state one syllable word until\n                    collected examples reaches around 800\n                  </td>\n                </tr>\n                <tr>\n                  <td>Stop</td>\n                  <td>\n                    Hold down and repeatedly state one syllable word until\n                    collected examples reaches around 800\n                  </td>\n                </tr>\n                <tr>\n                  <td>Left</td>\n                  <td>\n                    Hold down and repeatedly state one syllable word until\n                    collected examples reaches around 800\n                  </td>\n                </tr>\n                <tr>\n                  <td>Right</td>\n                  <td>\n                    Hold down and repeatedly state one syllable word until\n                    collected examples reaches around 800\n                  </td>\n                </tr>\n                <tr>\n                  <td>Noise</td>\n                  <td>\n                    Hold down to collect background noise until examples reaches\n                    around 800\n                  </td>\n                </tr>\n                <tr>\n                  <td>Train</td>\n                  <td>\n                    Click to auto-train your player. Training is complete when\n                    Epoch reaches 130\n                  </td>\n                </tr>\n                <tr>\n                  <td>Test</td>\n                  <td>\n                    Clickable when training is complete. Observe sliders to test\n                    responsiveness to spoken commands\n                  </td>\n                </tr>\n                <tr>\n                  <td>Ride</td>\n                  <td>Begin game</td>\n                </tr>\n                <tr>\n                  <td>Listen</td>\n                  <td>Begin listening for commands</td>\n                </tr>\n                <tr>\n                  <td>Screen click</td>\n                  <td>Allows use of panning camera (cursor lock)</td>\n                </tr>\n                <tr>\n                  <td>ESC Key</td>\n                  <td>Camera Lock (show cursor)</td>\n                </tr>\n              </tbody>\n            </Table>\n            <p>\n              Please Note: Game rendering is based on device GPU. Best\n              performance of game will be dependent on device ability to render\n              WebGL graphics.\n            </p>\n          </div>\n          <button onClick={this.toggleInstructions}>Close Instructions</button>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default Instructions;\n","import React from \"react\";\nimport Game from \"./ThreeJs/Game\";\nimport { collect, train, listen } from \"./tenserFlow\";\nimport Title from \"./components/TitleScreen\";\nimport \"firebase/firestore\";\nimport { connect } from \"react-redux\";\nimport {\n  getGameState,\n  gameStatePlaying,\n  gameStateWin,\n} from \"./store/gameState\";\nimport WinScreen from \"./components/WinScreen\";\nimport Stopwatch from \"./ThreeJs/Stopwatch\";\nimport AudioPlayer from \"./components/AudioPlayer\";\nimport Github from \"./components/Github\";\nimport Instructions from \"./components/Instructions\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      granted: \"\",\n      action: \"\",\n    };\n    this.changePlaying = this.changePlaying.bind(this);\n    this.changeWin = this.changeWin.bind(this);\n  }\n\n  componentDidMount() {}\n\n  changePlaying() {\n    const gameState = this.props.gameState;\n    this.props.gameStatePlaying(!gameState.isPlaying);\n  }\n\n  changeWin() {\n    const gameState = this.props.gameState;\n    this.props.gameStateWin(!gameState.hasWon);\n  }\n\n  askPermission() {\n    return navigator.mediaDevices\n      .getUserMedia({ audio: true })\n      .then(() => {\n        this.getPermission().then((permis) => {\n          this.setState({\n            granted: permis.state,\n          });\n        });\n      })\n      .catch(() => {\n        this.getPermission().then((permis) => {\n          this.setState({\n            granted: permis.state,\n          });\n        });\n      });\n  }\n\n  async getPermission() {\n    const permissionStatus = await navigator.permissions.query({\n      name: \"microphone\",\n    });\n    return permissionStatus;\n  }\n\n  renderSwitch(permiss) {\n    if (this.props.gameState.hasWon && !this.props.gameState.isPlaying) {\n      return (\n        <WinScreen\n          changeWin={this.changeWin}\n          changePlaying={this.changePlaying}\n        />\n      );\n    } else {\n      return this.props.gameState.isPlaying ? (\n        <>\n          <Game\n            action={this.state.action}\n            changeWin={this.changeWin}\n            changePlaying={this.changePlaying}\n            voiceAction={this.changeVoiceCommandAction}\n          />\n        </>\n      ) : (\n        <Title\n          changePlaying={this.changePlaying}\n          collect={collect}\n          train={train}\n          listen={listen}\n        />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Instructions />\n        <AudioPlayer />\n        {this.renderSwitch(this.state.granted)}\n        {this.props.gameState.isPlaying ? <Stopwatch /> : <Github />}\n      </>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  gameState: state.gameState,\n});\n\nconst mapDispatch = (dispatch) => ({\n  getGameState: () => dispatch(getGameState()),\n  gameStateWin: (hasWon) => dispatch(gameStateWin(hasWon)),\n  gameStatePlaying: (isPlaying) => dispatch(gameStatePlaying(isPlaying)),\n});\n\nexport default connect(mapState, mapDispatch)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"../src/store\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}