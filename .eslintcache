[{"/Users/hannah/gracehopper/postgrad/midnight-train/src/index.js":"1","/Users/hannah/gracehopper/postgrad/midnight-train/src/App.js":"2","/Users/hannah/gracehopper/postgrad/midnight-train/src/reportWebVitals.js":"3","/Users/hannah/gracehopper/postgrad/midnight-train/src/store/index.js":"4","/Users/hannah/gracehopper/postgrad/midnight-train/src/store/gameState.js":"5","/Users/hannah/gracehopper/postgrad/midnight-train/src/components/WinScreen.js":"6","/Users/hannah/gracehopper/postgrad/midnight-train/src/components/TitleScreen.js":"7","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/Stopwatch.js":"8","/Users/hannah/gracehopper/postgrad/midnight-train/src/components/AudioPlayer.js":"9","/Users/hannah/gracehopper/postgrad/midnight-train/src/components/Instructions.js":"10","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/Game.js":"11","/Users/hannah/gracehopper/postgrad/midnight-train/src/components/Github.js":"12","/Users/hannah/gracehopper/postgrad/midnight-train/src/store/time.js":"13","/Users/hannah/gracehopper/postgrad/midnight-train/src/store/leaderboard.js":"14","/Users/hannah/gracehopper/postgrad/midnight-train/src/store/position.js":"15","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/CarOne.js":"16","/Users/hannah/gracehopper/postgrad/midnight-train/src/components/leaderboard.js":"17","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/PokerTable.js":"18","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/CarThree.js":"19","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/Girl.js":"20","/Users/hannah/gracehopper/postgrad/midnight-train/src/components/RestartButton.js":"21","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/FloorPlane.js":"22","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/SidePlane.js":"23","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/FrontPlane.js":"24","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/Box.js":"25","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/EndZone.js":"26","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/SailorMoon.js":"27","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/Train.js":"28","/Users/hannah/gracehopper/postgrad/midnight-train/src/firebase.js":"29","/Users/hannah/gracehopper/postgrad/midnight-train/src/tenserFlow/index.js":"30","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/Viewport.js":"31","/Users/hannah/gracehopper/postgrad/midnight-train/src/components/ListenButton.js":"32"},{"size":622,"mtime":1608393632987,"results":"33","hashOfConfig":"34"},{"size":3383,"mtime":1608924343122,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1608329378057,"results":"36","hashOfConfig":"34"},{"size":1030,"mtime":1608838563349,"results":"37","hashOfConfig":"34"},{"size":1525,"mtime":1608329378057,"results":"38","hashOfConfig":"34"},{"size":4324,"mtime":1608836998977,"results":"39","hashOfConfig":"34"},{"size":3209,"mtime":1608919637314,"results":"40","hashOfConfig":"34"},{"size":2050,"mtime":1608329377887,"results":"41","hashOfConfig":"34"},{"size":1200,"mtime":1608511882740,"results":"42","hashOfConfig":"34"},{"size":2414,"mtime":1608511939602,"results":"43","hashOfConfig":"34"},{"size":3076,"mtime":1608922287610,"results":"44","hashOfConfig":"34"},{"size":333,"mtime":1608393632986,"results":"45","hashOfConfig":"34"},{"size":416,"mtime":1608329378057,"results":"46","hashOfConfig":"34"},{"size":1531,"mtime":1608838959632,"results":"47","hashOfConfig":"34"},{"size":481,"mtime":1608329378057,"results":"48","hashOfConfig":"34"},{"size":1827,"mtime":1608830237041,"results":"49","hashOfConfig":"34"},{"size":2570,"mtime":1608513080677,"results":"50","hashOfConfig":"34"},{"size":1748,"mtime":1608588745251,"results":"51","hashOfConfig":"34"},{"size":2303,"mtime":1608592306478,"results":"52","hashOfConfig":"34"},{"size":2707,"mtime":1608920372106,"results":"53","hashOfConfig":"34"},{"size":571,"mtime":1608329377888,"results":"54","hashOfConfig":"34"},{"size":490,"mtime":1608563779956,"results":"55","hashOfConfig":"34"},{"size":471,"mtime":1608511882740,"results":"56","hashOfConfig":"34"},{"size":473,"mtime":1608511882737,"results":"57","hashOfConfig":"34"},{"size":249,"mtime":1608511882737,"results":"58","hashOfConfig":"34"},{"size":870,"mtime":1608562438646,"results":"59","hashOfConfig":"34"},{"size":4265,"mtime":1608830098079,"results":"60","hashOfConfig":"34"},{"size":2859,"mtime":1608564955613,"results":"61","hashOfConfig":"34"},{"size":547,"mtime":1608837064845,"results":"62","hashOfConfig":"34"},{"size":6134,"mtime":1608921621843,"results":"63","hashOfConfig":"34"},{"size":1695,"mtime":1608563536798,"results":"64","hashOfConfig":"34"},{"size":758,"mtime":1608923759160,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1567126",{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"68"},"/Users/hannah/gracehopper/postgrad/midnight-train/src/index.js",[],["145","146"],"/Users/hannah/gracehopper/postgrad/midnight-train/src/App.js",["147","148","149","150"],"/Users/hannah/gracehopper/postgrad/midnight-train/src/reportWebVitals.js",[],"/Users/hannah/gracehopper/postgrad/midnight-train/src/store/index.js",["151","152","153","154","155","156"],"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport gameState from \"./gameState\";\nimport leaderboard from \"./leaderboard\";\nimport position from \"./position\";\nimport time from \"./time\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport thunk from \"redux-thunk\";\nimport firebase from \"../firebase\";\n\nconst reducer = combineReducers({\n  gameState,\n  leaderboard,\n  position,\n  time,\n});\n// const middleware = composeWithDevTools(\n//   applyMiddleware(thunkMiddleware, createLogger({ collapsed: true }))\n// );\nconst middleware = composeWithDevTools(applyMiddleware(thunkMiddleware));\nconst store = createStore(reducer, middleware);\n\n// const store = createStore(\n//   reducer,\n//   compose(\n//     applyMiddleware(thunk.withExtraArgument({ getFirestore })),\n//     reduxFirestore(firebase)\n//   )\n// );\n\nexport default store;\n","/Users/hannah/gracehopper/postgrad/midnight-train/src/store/gameState.js",["157"],"import { calcPosFromAngles } from \"@react-three/drei\";\n\n/**\n * ACTION TYPES\n */\nconst GET_GAMESTATE = 'GET_GAMESTATE';\nconst GAMESTATE_WIN = 'GAMESTATE_WIN';\nconst GAMESTATE_PLAYING = 'GAMESTATE_PLAYING';\nconst RESET_GAMESTATE = 'RESET_GAMESTATE';\nconst RESTART_GAMESTATE = 'RESTART_GAME_STATE'\n\n/**\n * INITIAL STATE\n */\n\n//calculate randomized start/endzone (could be two separate arrays with different combinations)\n//eg, if endzone A, then start is A, if enzone B, then start is B.\nconst INITIAL_STATE = { isPlaying: false, hasWon: false,isPaused: false, courseCompleted: false };\n\n/**\n * ACTION CREATORS\n */\n\nexport const getGameState = () => ({\n  type: GET_GAMESTATE,\n});\n\nexport const gameStateWin = (hasWon) => ({\n  type: GAMESTATE_WIN,\n  hasWon,\n});\n\nexport const gameStatePlaying = (isPlaying) => ({\n  type: GAMESTATE_PLAYING,\n  isPlaying,\n});\n\nexport const resetGameState = () => ({\n  type: RESET_GAMESTATE,\n});\n\nexport const restartGameState = () => ({\n  type: RESTART_GAMESTATE\n})\n\n/**\n * THUNK CREATORS\n */\n\n/**\n * REDUCER\n */\nexport default function gameStateReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case GET_GAMESTATE:\n      return state;\n      case GAMESTATE_WIN:\n        return { ...state, hasWon: action.hasWon};\n      case GAMESTATE_PLAYING:\n        return { ...state, isPlaying: action.isPlaying}\n    case RESET_GAMESTATE:\n      return { ...state, isPlaying: true, hasWon: false};\n    case RESTART_GAMESTATE:\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n}\n","/Users/hannah/gracehopper/postgrad/midnight-train/src/components/WinScreen.js",["158","159","160"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addRecordToDb } from \"../store/leaderboard\";\nimport {\n  getGameState,\n  resetGameState,\n  gameStatePlaying,\n  gameStateWin,\n} from \"../store/gameState\";\nimport Leaderboard from \"./leaderboard\";\n\nclass WinScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      showModal: false,\n      submitted: false,\n    };\n    this.submitScore = this.submitScore.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n    this.toggleLeaderboard = this.toggleLeaderboard.bind(this);\n    this.hoverSound = this.hoverSound.bind(this);\n    this.selectSound = this.selectSound.bind(this);\n  }\n  toggleSfx = new Audio(\"./sfx/toggle.mp3\");\n  selectSfx = new Audio(\"./sfx/select.mp3\");\n\n  hoverSound() {\n    this.toggleSfx.volume = 0.5;\n    this.toggleSfx.play();\n  }\n\n  selectSound() {\n    this.selectSfx.volume = 0.5;\n    this.selectSfx.play();\n  }\n\n  handleChange(e) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  submitScore(e) {\n    e.preventDefault();\n    this.selectSound();\n    this.props.addToLeaderboard({\n      name: this.state.name,\n      score: this.props.time,\n    });\n    this.setState({\n      submitted: true,\n    });\n  }\n\n  resetGame() {\n    this.selectSound();\n    this.props.resetGame();\n  }\n\n  toggleLeaderboard() {\n    this.selectSound();\n    this.setState({\n      showModal: !this.state.showModal,\n    });\n  }\n\n  render() {\n    let elapsedTime = this.props.time;\n    let minutes, seconds, milliseconds;\n    minutes = Math.floor(elapsedTime / 60).toLocaleString(\"en-US\", {\n      minimumIntegerDigits: 2,\n      useGrouping: false,\n    }); //00 always two digits\n    seconds = Math.floor(elapsedTime - minutes * 60).toLocaleString(\"en-US\", {\n      minimumIntegerDigits: 2,\n      useGrouping: false,\n    }); //00 always two digits\n    milliseconds = Math.floor((elapsedTime % 1) * 100).toLocaleString(\"en-US\", {\n      minimumIntegerDigits: 2,\n      useGrouping: false,\n    }); //always two digits\n    //add penalty to elapsedTime\n    //update state's elapsedTime for leaderboar\n    elapsedTime = `${minutes}:${seconds}:${milliseconds}`;\n\n    return (\n      <div className=\"home\">\n        <div className=\"title\">\n          <h1>Course Complete</h1>\n        </div>\n        <div className=\"message\">\n          <h2>\n            Your time is <strong>{elapsedTime}</strong>\n          </h2>\n          {!this.state.submitted && <p>Add to leaderboard?</p>}\n          {!this.state.submitted ? (\n            <form id=\"score-submission\" onSubmit={(e) => this.submitScore(e)}>\n              <label htmlFor=\"name\">Name</label>\n              <div id=\"score-input\">\n                <input\n                  required\n                  name=\"name\"\n                  placeholder=\"ABC\"\n                  type=\"text\"\n                  value={this.state.name}\n                  onChange={(e) => this.handleChange(e)}\n                />\n                <button onMouseOver={this.hoverSound} type=\"submit\">\n                  Submit\n                </button>\n              </div>\n            </form>\n          ) : (\n            <div>\n              <h2>\n                <strong>Score Submitted</strong>\n              </h2>\n            </div>\n          )}\n        </div>\n        <div id=\"button-row\">\n          <button\n            id=\"leaderboard-button\"\n            onMouseOver={this.hoverSound}\n            onClick={this.toggleLeaderboard}\n          >\n            Leaderboard\n          </button>\n          {this.state.showModal && (\n            <Leaderboard\n              showModal={this.state.showModal}\n              toggleLeaderboard={this.toggleLeaderboard}\n            />\n          )}\n          <button\n            id=\"playButton\"\n            onMouseOver={this.hoverSound}\n            onClick={this.resetGame}\n          >\n            Play again?\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  time: state.time,\n  leaderboard: state.leaderboard,\n  gameState: state.gameState,\n});\n\nconst mapDispatch = (dispatch) => ({\n  addToLeaderboard: (score) => dispatch(addRecordToDb(score)),\n  resetGame: () => dispatch(resetGameState()),\n});\n\nexport default connect(mapState, mapDispatch)(WinScreen);\n","/Users/hannah/gracehopper/postgrad/midnight-train/src/components/TitleScreen.js",["161"],"import React from \"react\";\nimport Leaderboard from \"./leaderboard\";\n\nclass Title extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n    };\n    this.hoverSound = this.hoverSound.bind(this);\n    this.selectSound = this.selectSound.bind(this);\n    this.toggleLeaderboard = this.toggleLeaderboard.bind(this);\n  }\n  toggleSfx = new Audio(\"./sfx/toggle.mp3\");\n  selectSfx = new Audio(\"./sfx/select.mp3\");\n\n  hoverSound() {\n    this.toggleSfx.volume = 0.5;\n    this.toggleSfx.play();\n  }\n\n  selectSound() {\n    this.selectSfx.volume = 0.5;\n    this.selectSfx.play();\n  }\n\n  toggleLeaderboard() {\n    this.selectSound();\n    this.setState({\n      showModal: !this.state.showModal,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <button\n          id=\"left\"\n          onMouseDown={() => this.props.collect(0)}\n          onMouseUp={() => this.props.collect(null)}\n        >\n          Left\n        </button>\n        <button\n          id=\"right\"\n          onMouseDown={() => this.props.collect(1)}\n          onMouseUp={() => this.props.collect(null)}\n        >\n          Right\n        </button>\n        {/* <button\n          id=\"stop\"\n          onMouseDown={() => this.props.collect(2)}\n          onMouseUp={() => this.props.collect(null)}\n        >\n          Stop\n        </button>\n        <button\n          id=\"go\"\n          onMouseDown={() => this.props.collect(3)}\n          onMouseUp={() => this.props.collect(null)}\n        >\n          Go\n        </button> */}\n        <button\n          id=\"noise\"\n          onMouseDown={() => this.props.collect(2)}\n          onMouseUp={() => this.props.collect(null)}\n        >\n          Noise\n        </button>\n        <button id=\"train\" onClick={() => this.props.train()}>\n          Train\n        </button>\n        <button id=\"listen\" onClick={() => this.props.listen()}>\n          Listen\n        </button>\n        <input type=\"range\" id=\"output\" min={0} max={10} step={0.1}></input>\n        <div id=\"console\"></div>\n        <div className=\"title\">\n          <h1>Midnight Train</h1>\n        </div>\n        <div className=\"message\">\n          <h2>A voice-command driven 3D interactive simulation</h2>\n          <p>Please ride responsibly.</p>\n        </div>\n        <div id=\"button-row\">\n          <button\n            id=\"leaderboard-button\"\n            onMouseOver={this.hoverSound}\n            onClick={this.toggleLeaderboard}\n          >\n            Leaderboard\n          </button>\n          {this.state.showModal && (\n            <Leaderboard\n              showModal={this.state.showModal}\n              toggleLeaderboard={this.toggleLeaderboard}\n            />\n          )}\n          <button\n            id=\"playButton\"\n            onMouseOver={() => this.hoverSound()}\n            onClick={() => (this.props.changePlaying(), this.selectSound())}\n          >\n            Ride\n          </button>\n        </div>\n        <div className=\"definition\">\n          <p>\n            Midnight Train\n            <br />\n            <span id=\"defnoun\">A train</span> : With no where to go and to go no\n            where.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Title;\n","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/Stopwatch.js",[],"/Users/hannah/gracehopper/postgrad/midnight-train/src/components/AudioPlayer.js",["162","163"],"import React, { useState, useEffect } from \"react\";\n\nconst useAudio = (url) => {\n  const [audio] = useState(new Audio(\"./music/E-Saggila-Aziza.wav\"));\n  const [playing, setPlaying] = useState(false);\n  audio.volume = 0.2;\n  audio.loop = true;\n  const toggle = () => {\n    setPlaying(!playing);\n  };\n\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  }, [playing]);\n\n  useEffect(() => {\n    const initialAudio = function (event) {\n      toggle();\n      window.removeEventListener(\"click\", initialAudio, false);\n    };\n    window.addEventListener(\"click\", initialAudio, false);\n\n    audio.addEventListener(\"ended\", () => setPlaying(false));\n    return () => {\n      audio.removeEventListener(\"ended\", () => setPlaying(false));\n    };\n  }, []);\n  return [playing, toggle];\n};\n\nconst Player = ({ url }) => {\n  const [playing, toggle] = useAudio(url);\n\n  return (\n    <div id=\"audio-player\">\n      <button id=\"audio-button\" onClick={toggle}>\n        <img src=\"./icon/audio.png\" alt=\"play-audio-icon\" />\n      </button>\n      {playing && (\n        <div id=\"song-info\">\n          <h3>Aziza</h3>\n          <h4>E-Saggila</h4>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Player;\n","/Users/hannah/gracehopper/postgrad/midnight-train/src/components/Instructions.js",[],"/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/Game.js",["164","165"],"import React, { Suspense } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport { stopListening, startListening, loadModel } from \"../tenserFlow\";\nimport { Stars } from \"@react-three/drei\";\nimport { Physics } from \"@react-three/cannon\";\nimport Girl from \"./Girl\";\nimport CarOne from \"./CarOne\";\nimport SailorMoon from \"./SailorMoon\";\nimport CarThree from \"./CarThree\";\nimport PokerTable from \"./PokerTable\";\nimport Box from \"./Box\";\nimport Train from \"./Train\";\nimport FloorPlane from \"./FloorPlane\";\nimport SidePlane from \"./SidePlane\";\nimport FrontPlane from \"./FrontPlane\";\nimport EndZone from \"./EndZone\";\nimport store from \"../store\";\nimport RestartButton from \"../components/RestartButton\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      endPosition: {},\n    };\n    this.updatePosition = this.updatePosition.bind(this);\n  }\n\n  componentDidMount() {\n    // loadModel().then(() => startListening(this.voiceAction));\n  }\n\n  // voiceAction(command) {\n  //   this.setState({\n  //     action: command,\n  //   });\n  //   console.log(\"voice command:\", this.state.action);\n  // }\n  // function to pass EndZone Position\n  // up to parent as props\n  updatePosition(endPosition) {\n    this.setState({\n      endPosition: endPosition,\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <RestartButton />\n        <Canvas colorManagement shadowMap>\n          <Stars radius={100} depth={800} count={50000} />\n          <hemisphereLight intensity={0.5} />\n          <ambientLight intensity={0.2} />\n          <spotLight\n            castShadow\n            penumbra={1}\n            intensity={2}\n            position={[150, 300, -150]}\n            lookAt={[0, 0, 300]}\n            shadow-mapSize-width={512}\n            shadow-mapSize-height={512}\n            shadow-camera-near={0.1}\n            shadow-camera-far={500}\n          />\n          <Physics gravity={[0, -100, 0]}>\n            <FloorPlane\n              rotation={[-(Math.PI / 2), 0, 0]}\n              position={[0, 1, 0]}\n            />\n            <EndZone store={store} />\n            <Suspense fallback={<Box />}>\n              <Girl\n                action={this.props.action}\n                girlPosition={[0, 0, 200]}\n                stopListening={stopListening}\n                changeWin={this.props.changeWin}\n                setAction={this.props.voiceAction}\n                changePlaying={this.props.changePlaying}\n                store={store}\n              />\n              <CarOne />\n              <CarThree />\n              <SailorMoon />\n              <PokerTable />\n            </Suspense>\n            <Train rotation={[0, 0, 0]} position={[0, 0, 140]} />\n            <FrontPlane position={[0, 0, -800]} />\n            <SidePlane\n              rotation={[0, -Math.PI / 2, 0]}\n              position={[15, 0, -200]}\n            />\n            <SidePlane\n              rotation={[0, Math.PI / 2, 0]}\n              position={[-15, 0, -200]}\n            />\n          </Physics>\n        </Canvas>\n      </>\n    );\n  }\n}\n\nexport default Game;\n","/Users/hannah/gracehopper/postgrad/midnight-train/src/components/Github.js",[],"/Users/hannah/gracehopper/postgrad/midnight-train/src/store/time.js",[],"/Users/hannah/gracehopper/postgrad/midnight-train/src/store/leaderboard.js",[],"/Users/hannah/gracehopper/postgrad/midnight-train/src/store/position.js",["166"],"\n/**\n * ACTION TYPES\n */\nconst GET_POSITION = 'GET_POSITION'\nconst UPDATE_POSITION = 'UPDATE_POSITION'\n\n/**\n * INITIAL STATE\n */\nconst INITIAL_STATE = {}\n\n/**\n * ACTION CREATORS\n */\n\nexport const getPosition = (position) => ({\n   type: GET_POSITION,\n   position\n })\n\n /**\n * REDUCER\n */\n\nexport default function leaderboardReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case GET_POSITION:\n      return action.position;\n    default:\n      return state;\n  }\n}\n","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/CarOne.js",["167","168","169","170"],"import React from \"react\";\nimport { useLoader } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport brad from \"../models/people/brad.glb\";\nimport red from \"../models/people/red.glb\";\nimport popstar from \"../models/people/popstar.glb\";\nimport maria from \"../models/people/maria.glb\";\nimport { useBox } from \"@react-three/cannon\";\n// import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\n\nconst CarOne = (props) => {\n  const { scene: gltf } = useLoader(GLTFLoader, brad);\n  const { scene: gltfRed } = useLoader(GLTFLoader, red);\n  const { scene: gltfPopstar } = useLoader(GLTFLoader, popstar);\n  const { scene: gltfMaria } = useLoader(GLTFLoader, maria);\n\n  const [bradRef, api] = useBox(() => ({\n    mass: 2,\n    args: [5, 5, 5],\n    position: [0, 0, 180],\n    rotation: [0, (Math.PI * 90) / 180, 0],\n  }));\n  const [redRef, apiRed] = useBox(() => ({\n    mass: 1,\n    args: [3, 5, 3],\n    position: [-4, 10, 140],\n  }));\n  const [popstarRef, apiPopstar] = useBox(() => ({\n    mass: 1,\n    args: [5, 7, 5],\n    position: [6, 0, 135],\n    rotation: [0, (Math.PI * 280) / 180, 0],\n  }));\n  const [mariaRef, apiMaria] = useBox(() => ({\n    mass: 1,\n    args: [6, 5, 6],\n    position: [8, 0, 120],\n    rotation: [0, (Math.PI * -25) / 180, 0],\n  }));\n\n  return (\n    <>\n      <mesh ref={bradRef}>\n        <primitive object={gltf} scale={[8, 8, 8]} />\n      </mesh>\n      <mesh ref={redRef}>\n        <primitive object={gltfRed} scale={[0.9, 0.9, 0.9]} />\n      </mesh>\n      <mesh ref={popstarRef}>\n        <primitive\n          object={gltfPopstar}\n          position={[0, 6, 0]}\n          scale={[9, 9, 9]}\n        />\n      </mesh>\n      <mesh ref={mariaRef}>\n        <primitive object={gltfMaria} scale={[9, 9, 9]} />\n      </mesh>\n    </>\n  );\n};\n\nexport default CarOne;\n","/Users/hannah/gracehopper/postgrad/midnight-train/src/components/leaderboard.js",[],"/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/PokerTable.js",["171","172","173","174"],"import React from \"react\";\nimport { useLoader } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport table from \"../models/poker_table/scene.glb\";\nimport money from \"../models/money/scene.glb\";\nimport chair from \"../models/chair/scene.glb\";\nimport person from \"../models/people/spy.glb\";\nimport { useBox } from \"@react-three/cannon\";\n// import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\n\nconst PokerTable = (props) => {\n  const gltf = useLoader(GLTFLoader, table);\n  const gltfMoney = useLoader(GLTFLoader, money);\n  const gltfChair = useLoader(GLTFLoader, chair);\n  const gltfPerson = useLoader(GLTFLoader, person);\n\n  const [tableRef, api] = useBox(() => ({\n    mass: 3,\n    args: [6, 6, 6],\n    position: [-8, 2, -512],\n  }));\n  const [moneyRef, apiMoney] = useBox(() => ({\n    type: \"Kinematic\",\n    args: [1, 1, 1],\n    position: [-4, 10, -513],\n  }));\n  const [chairRef, apiChair] = useBox(() => ({\n    mass: 3,\n    args: [6, 9, 6],\n    position: [6, 2, -513],\n    rotation: [0, (Math.PI * 95) / 180, 0],\n  }));\n  const [personRef, apiPerson] = useBox(() => ({\n    mass: 3,\n    args: [3, 5, 3],\n    position: [8, 0, -520],\n    rotation: [0, (Math.PI * -25) / 180, 0],\n  }));\n\n  return (\n    <>\n      <mesh ref={tableRef}>\n        <primitive object={gltf.scene} scale={[0.01, 0.01, 0.01]} />\n      </mesh>\n      <mesh ref={moneyRef}>\n        <primitive object={gltfMoney.scene} scale={[3, 3, 3]} />\n      </mesh>\n      <mesh ref={chairRef}>\n        <primitive object={gltfChair.scene} scale={[1, 1, 1]} />\n      </mesh>\n      <mesh ref={personRef}>\n        <primitive object={gltfPerson.scene} scale={[0.1, 0.1, 0.1]} />\n      </mesh>\n    </>\n  );\n};\n\nexport default PokerTable;\n","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/CarThree.js",["175","176","177","178","179"],"import React from \"react\";\nimport { useLoader } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport aquarium from \"../models/items/aquarium.glb\";\nimport eaterPlant from \"../models/items/eaterplant.glb\";\nimport fan from \"../models/items/fan.glb\";\nimport medplant from \"../models/items/medplant.glb\";\nimport juliette from \"../models/people/juliette.glb\";\nimport { useBox } from \"@react-three/cannon\";\n// import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\n\nconst CarThree = (props) => {\n  const { scene: gltf } = useLoader(GLTFLoader, aquarium);\n  const gltfeaterPlant = useLoader(GLTFLoader, eaterPlant);\n  const gltffan = useLoader(GLTFLoader, fan);\n  const gltfmedplant = useLoader(GLTFLoader, medplant);\n  const gltfjuliette = useLoader(GLTFLoader, juliette);\n\n  const [aquariumRef, api] = useBox(() => ({\n    mass: 1,\n    args: [7, 3, 7],\n    position: [-5, 0, -400],\n    rotation: [0, (Math.PI * 90) / 180, 0],\n  }));\n  const [eaterPlantRef, apieaterPlant] = useBox(() => ({\n    mass: 1,\n    args: [3, 3, 3],\n    position: [-4, 10, -350],\n  }));\n  const [fanRef, apifan] = useBox(() => ({\n    mass: 1,\n    args: [3, 3, 3],\n    position: [6, 0, -380],\n    rotation: [0, (Math.PI * 280) / 180, 0],\n  }));\n  const [medplantRef, apimedplant] = useBox(() => ({\n    mass: 1,\n    args: [5, 5, 5],\n    position: [8, 0, -420],\n    rotation: [0, (Math.PI * -25) / 180, 0],\n  }));\n\n  const [julietteRef, apijuliette] = useBox(() => ({\n    mass: 1,\n    args: [7, 5, 7],\n    position: [8, 0, -340],\n    rotation: [0, (Math.PI * -25) / 180, 0],\n  }));\n\n  return (\n    <>\n      <mesh ref={aquariumRef}>\n        <primitive object={gltf} scale={[0.03, 0.03, 0.03]} />\n      </mesh>\n      <mesh ref={eaterPlantRef}>\n        <primitive object={gltfeaterPlant.scene} scale={[0.01, 0.01, 0.01]} />\n      </mesh>\n      <mesh ref={fanRef}>\n        <primitive\n          object={gltffan.scene}\n          position={[0, 6, 0]}\n          scale={[0.2, 0.2, 0.2]}\n        />\n      </mesh>\n      <mesh ref={medplantRef}>\n        <primitive object={gltfmedplant.scene} scale={[3, 3, 3]} />\n      </mesh>\n      <mesh ref={julietteRef}>\n        <primitive object={gltfjuliette.scene} scale={[0.06, 0.06, 0.06]} />\n      </mesh>\n    </>\n  );\n};\n\nexport default CarThree;\n","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/Girl.js",[],"/Users/hannah/gracehopper/postgrad/midnight-train/src/components/RestartButton.js",[],"/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/FloorPlane.js",[],"/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/SidePlane.js",[],"/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/FrontPlane.js",[],"/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/Box.js",[],"/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/EndZone.js",[],"/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/SailorMoon.js",["180","181","182","183","184","185","186","187","188","189","190"],"import React from \"react\";\nimport { useLoader } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport sailormoon from \"../models/sailormoon_test/scene.glb\";\nimport { useBox } from \"@react-three/cannon\";\n// import { FBXLoader } from \"three/examples/jsm/loaders/FBXLoader\";\n\nconst SailorMoon = (props) => {\n  const gltf = useLoader(GLTFLoader, sailormoon);\n\n  const [charRef, api] = useBox(() => ({\n    mass: 2,\n    args: [3, 6, 3],\n    position: [-8, 2, -50],\n  }));\n\n  const [charTwoRef, apiTwo] = useBox(() => ({\n    mass: 2,\n    args: [3, 6, 3],\n    position: [0, 2, -30],\n    rotation: [0, (Math.PI * -65) / 180, 0],\n  }));\n\n  const [charThreeRef, apiThree] = useBox(() => ({\n    mass: 2,\n    args: [3, 6, 3],\n    position: [0, 2, -100],\n    rotation: [0, (Math.PI * -45) / 180, 0],\n  }));\n\n  const [charFourRef, apiFour] = useBox(() => ({\n    mass: 2,\n    args: [3, 6, 3],\n    position: [5, 2, -120],\n    rotation: [0, (Math.PI * -35) / 180, 0],\n  }));\n\n  const [charFiveRef, apiFive] = useBox(() => ({\n    mass: 2,\n    args: [3, 6, 3],\n    position: [-3, 2, -130],\n    rotation: [0, (Math.PI * 35) / 180, 0],\n  }));\n\n  const [charSixRef, apiSix] = useBox(() => ({\n    mass: 2,\n    args: [3, 6, 3],\n    position: [-7, 2, -110],\n    rotation: [0, (Math.PI * 50) / 180, 0],\n  }));\n\n  const [charSevenRef, apiSeven] = useBox(() => ({\n    mass: 2,\n    args: [3, 6, 3],\n    position: [0, 2, -20],\n    rotation: [0, (Math.PI * 50) / 180, 0],\n  }));\n\n  const [charEightRef, apiEight] = useBox(() => ({\n    mass: 2,\n    args: [3, 6, 3],\n    position: [0, 2, -10],\n    rotation: [0, (Math.PI * 80) / 180, 0],\n  }));\n\n  const [charNineRef, apiNine] = useBox(() => ({\n    mass: 2,\n    args: [3, 6, 3],\n    position: [8, 2, -50],\n    rotation: [0, (Math.PI * -80) / 180, 0],\n  }));\n\n  const [charTenRef, apiTen] = useBox(() => ({\n    mass: 2,\n    args: [3, 6, 3],\n    position: [10, 2, -35],\n    rotation: [0, (Math.PI * -80) / 180, 0],\n  }));\n\n  const [charElevenRef, apiEleven] = useBox(() => ({\n    mass: 2,\n    args: [3, 6, 3],\n    position: [0, 2, -45],\n    rotation: [0, (Math.PI * -80) / 180, 0],\n  }));\n\n  return (\n    <>\n      <mesh ref={charRef}>\n        <primitive object={gltf.scene} scale={[7, 7, 7]} />\n      </mesh>\n      <mesh ref={charTwoRef}>\n        <primitive object={gltf.scene.clone(true)} scale={[7, 7, 7]} />\n      </mesh>\n      <mesh ref={charThreeRef}>\n        <primitive object={gltf.scene.clone(true)} scale={[7, 7, 7]} />\n      </mesh>\n      <mesh ref={charFourRef}>\n        <primitive object={gltf.scene.clone(true)} scale={[7, 7, 7]} />\n      </mesh>\n      <mesh ref={charFiveRef}>\n        <primitive object={gltf.scene.clone(true)} scale={[7, 7, 7]} />\n      </mesh>\n      <mesh ref={charSixRef}>\n        <primitive object={gltf.scene.clone(true)} scale={[7, 7, 7]} />\n      </mesh>\n      <mesh ref={charSevenRef}>\n        <primitive object={gltf.scene.clone(true)} scale={[7, 7, 7]} />\n      </mesh>\n      <mesh ref={charEightRef}>\n        <primitive object={gltf.scene.clone(true)} scale={[7, 7, 7]} />\n      </mesh>\n      <mesh ref={charNineRef}>\n        <primitive object={gltf.scene.clone(true)} scale={[7, 7, 7]} />\n      </mesh>\n      <mesh ref={charTenRef}>\n        <primitive object={gltf.scene.clone(true)} scale={[7, 7, 7]} />\n      </mesh>\n      <mesh ref={charElevenRef}>\n        <primitive object={gltf.scene.clone(true)} scale={[7, 7, 7]} />\n      </mesh>\n    </>\n  );\n};\n\nexport default SailorMoon;\n\n// <primitive\n//   object={gltf.scene.clone(true)}\n//   scale={[7, 7, 7]}\n//   position={[0, 0, -80]}\n//   // rotation={[0, (Math.PI * -65) / 180, 0]}\n// />\n// <primitive\n//   object={gltf.scene.clone(true)}\n//   scale={[7, 7, 7]}\n//   position={[10, 0, -100]}\n//   rotation={[0, (Math.PI * -65) / 180, 0]}\n// />\n// <primitive\n//   object={gltf.scene.clone(true)}\n//   scale={[7, 7, 7]}\n//   position={[12, 0, -60]}\n//   rotation={[0, (Math.PI * -75) / 180, 0]}\n// />\n// <primitive\n//   object={gltf.scene.clone(true)}\n//   scale={[7, 7, 7]}\n//   position={[3, 0, -120]}\n//   rotation={[0, (Math.PI * -75) / 180, 0]}\n// />\n// <primitive\n//   object={gltf.scene.clone(true)}\n//   scale={[7, 7, 7]}\n//   position={[8, 0, -110]}\n//   rotation={[0, (Math.PI * -35) / 180, 0]}\n// />\n","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/Train.js",["191"],"import React from \"react\";\nimport { useLoader } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { useBox } from \"@react-three/cannon\";\nimport train from \"../models/subway_train_interior/scene.glb\";\n\nconst Train = (props) => {\n  //trainRef: train's property in scene (read only)\n  //api: train's physics object (methods to set/subscribe)\n  const { scene } = useLoader(GLTFLoader, train);\n  const [trainRef, api] = useBox(() => ({\n    type: \"Kinematic\",\n    args: [4.7, 1.3, 2],\n    position: props.position,\n    rotation: props.rotation,\n  }));\n\n  return (\n    <>\n      <mesh ref={trainRef}>\n        <group dispose={null}>\n          <primitive object={scene} scale={[0.1, 0.1, 0.1]} />\n          <primitive\n            object={scene.clone(true)}\n            scale={[0.1, 0.1, 0.1]}\n            position={[\n              props.position[0],\n              props.position[1],\n              props.position[2] - 140,\n            ]}\n            rotation={[0, (Math.PI * 180) / 180, 0]}\n          />\n          <primitive\n            object={scene.clone(true)}\n            scale={[0.1, 0.1, 0.1]}\n            position={[\n              props.position[0],\n              props.position[1],\n              props.position[2] - 380,\n            ]}\n            rotation={[0, (Math.PI * 180) / 180, 0]}\n          />\n          <primitive\n            object={scene.clone(true)}\n            scale={[0.1, 0.1, 0.1]}\n            position={[\n              props.position[0],\n              props.position[1],\n              props.position[2] - 380,\n            ]}\n          />\n          <primitive\n            object={scene.clone(true)}\n            scale={[0.1, 0.1, 0.1]}\n            position={[\n              props.position[0],\n              props.position[1],\n              props.position[2] - 620,\n            ]}\n            rotation={[0, (Math.PI * 180) / 180, 0]}\n          />\n          <primitive\n            object={scene.clone(true)}\n            scale={[0.1, 0.1, 0.1]}\n            position={[\n              props.position[0],\n              props.position[1],\n              props.position[2] - 620,\n            ]}\n          />\n          <primitive\n            object={scene.clone(true)}\n            scale={[0.1, 0.1, 0.1]}\n            position={[\n              props.position[0],\n              props.position[1],\n              props.position[2] - 860,\n            ]}\n            rotation={[0, (Math.PI * 180) / 180, 0]}\n          />\n          <primitive\n            object={scene.clone(true)}\n            scale={[0.1, 0.1, 0.1]}\n            position={[\n              props.position[0],\n              props.position[1],\n              props.position[2] - 860,\n            ]}\n          />\n        </group>\n        <meshStandardMaterial wireframe={true} attach=\"material\" />\n      </mesh>\n    </>\n  );\n};\n\nexport default Train;\n","/Users/hannah/gracehopper/postgrad/midnight-train/src/firebase.js",[],"/Users/hannah/gracehopper/postgrad/midnight-train/src/tenserFlow/index.js",["192"],"import * as tf from \"@tensorflow/tfjs\";\nimport * as speechCommands from \"@tensorflow-models/speech-commands\";\n\nlet recognizer;\nlet words;\n// One frame is ~23ms of audio.\nconst NUM_FRAMES = 3;\nlet examples = [];\nconst INPUT_SHAPE = [NUM_FRAMES, 232, 1];\nlet model;\n\nexport async function loadModel() {\n  try {\n    recognizer = speechCommands.create(\"BROWSER_FFT\");\n    // Make sure that the underlying model and metadata are loaded via HTTPS requests\n    await recognizer.ensureModelLoaded();\n    // words = recognizer.wordLabels();\n    // See the array of words that the recognizer is trained to recognize.\n    // console.log(recognizer.wordLabels());\n    buildModel();\n  } catch (err) {\n    console.log(err);\n  }\n}\nloadModel();\n\nexport function collect(label) {\n  if (recognizer.isListening()) {\n    return recognizer.stopListening();\n  }\n  if (label == null) {\n    return;\n  }\n\n  recognizer.listen(\n    async ({ spectrogram: { frameSize, data } }) => {\n      let vals = normalize(data.subarray(-frameSize * NUM_FRAMES));\n      examples.push({ vals, label });\n      document.querySelector(\n        \"#console\"\n      ).textContent = `${examples.length} examples collected`;\n      console.log(\"examples\", examples);\n    },\n    {\n      overlapFactor: 0.999,\n      includeSpectrogram: true,\n      invokeCallbackOnNoiseAndUnknown: true,\n    }\n  );\n}\n\nexport function normalize(x) {\n  const mean = -100;\n  const std = 10;\n  return x.map((x) => (x - mean) / std);\n}\n\nexport async function train() {\n  try {\n    toggleButtons(false);\n    const ys = tf.oneHot(\n      examples.map((e) => e.label),\n      3\n    );\n    const xsShape = [examples.length, ...INPUT_SHAPE];\n    console.log(\"xs shape\", xsShape);\n    const xs = tf.tensor(flatten(examples.map((e) => e.vals)), xsShape);\n    console.log(\"xs\", xs);\n    console.log(\"model\", model);\n    await model.fit(xs, ys, {\n      batchSize: 16,\n      epochs: 10,\n      callbacks: {\n        onEpochEnd: (epoch, logs) => {\n          document.querySelector(\"#console\").textContent = `Accuracy: ${(\n            logs.acc * 100\n          ).toFixed(1)}% Epoch: ${epoch + 1}`;\n        },\n      },\n    });\n    tf.dispose([xs, ys]);\n    toggleButtons(true);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function buildModel() {\n  model = tf.sequential();\n  model.add(\n    tf.layers.depthwiseConv2d({\n      depthMultiplier: 8,\n      // 3 actions\n      kernelSize: [NUM_FRAMES, 3],\n      activation: \"relu\",\n      inputShape: INPUT_SHAPE,\n    })\n  );\n  model.add(tf.layers.maxPooling2d({ poolSize: [1, 2], strides: [2, 2] }));\n  model.add(tf.layers.flatten());\n  model.add(tf.layers.dense({ units: 3, activation: \"softmax\" }));\n  const optimizer = tf.train.adam(0.01);\n  model.compile({\n    optimizer,\n    loss: \"categoricalCrossentropy\",\n    metrics: [\"accuracy\"],\n  });\n}\n\nexport function toggleButtons(enable) {\n  document.querySelectorAll(\"button\").forEach((b) => (b.disabled = !enable));\n}\n\nexport function flatten(tensors) {\n  const size = tensors[0].length;\n  const result = new Float32Array(tensors.length * size);\n  tensors.forEach((arr, i) => result.set(arr, i * size));\n  return result;\n}\n\nasync function moveSlider(labelTensor) {\n  try {\n    const label = (await labelTensor.data())[0];\n    document.getElementById(\"console\").textContent = label;\n    if (label === 2) {\n      return;\n    }\n    let delta = 0.1;\n    const prevValue = +document.getElementById(\"output\").value;\n    document.getElementById(\"output\").value =\n      prevValue + (label === 0 ? -delta : delta);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport function listen() {\n  if (recognizer.isListening()) {\n    recognizer.stopListening();\n    toggleButtons(true);\n    document.getElementById(\"listen\").textContent = \"Listen\";\n    return;\n  }\n  toggleButtons(false);\n  document.getElementById(\"listen\").textContent = \"Stop\";\n  document.getElementById(\"listen\").disabled = false;\n\n  recognizer.listen(\n    async ({ spectrogram: { frameSize, data } }) => {\n      const vals = normalize(data.subarray(-frameSize * NUM_FRAMES));\n      const input = tf.tensor(vals, [1, ...INPUT_SHAPE]);\n      const probs = model.predict(input);\n      const predLabel = probs.argMax(1);\n      await moveSlider(predLabel);\n      tf.dispose([input, probs, predLabel]);\n    },\n    {\n      overlapFactor: 0.999,\n      includeSpectrogram: true,\n      invokeCallbackOnNoiseAndUnknown: true,\n    }\n  );\n}\n\nexport function startListening(callback) {\n  recognizer.listen(\n    async ({ spectrogram: { frameSize, data } }) => {\n      const vals = normalize(data.subarray(-frameSize * NUM_FRAMES));\n      const input = tf.tensor(vals, [1, ...INPUT_SHAPE]);\n      const probs = model.predict(input);\n      const predLabel = probs.argMax(1);\n      await callback(predLabel);\n      tf.dispose([input, probs, predLabel]);\n    },\n    {\n      overlapFactor: 0.999,\n      includeSpectrogram: true,\n      invokeCallbackOnNoiseAndUnknown: true,\n    }\n  );\n}\n\n////////////////////////////////////\n\n// `listen()` takes two arguments:\n// 1. A callback function that is invoked anytime a word is recognized.\n// 2. A configuration object with adjustable fields such as\n//    - includeSpectrogram\n//    - probabilityThreshold\n//    - includeEmbedding\n// export function startListening(callback) {\n//   recognizer.listen(\n//     ({ scores }) => {\n//       // turn scores into a list of (score, word) pairs\n//       scores = Array.from(scores).map((s, i) => ({ score: s, word: words[i] }));\n//       // Find the most probable word\n//       scores.sort((s1, s2) => s2.score - s1.score);\n\n//       let command = scores[0].word;\n//       callback(command);\n//       // - result.scores contains the probability scores that correspond to recognizer.wordLabels().\n//       // - result.spectrogram contains the spectrogram of the recognized word.\n//     },\n//     {\n//       includeSpectrogram: true,\n//       probabilityThreshold: 0.9,\n//     }\n//   );\n// }\n\nexport function stopListening() {\n  recognizer.stopListening();\n}\n\nexport default recognizer;\n\n//plan: take console log model and copy it into a file, call the file and reference it for listening when the game starts\n","/Users/hannah/gracehopper/postgrad/midnight-train/src/ThreeJs/Viewport.js",[],"/Users/hannah/gracehopper/postgrad/midnight-train/src/components/ListenButton.js",["193"],"import React from \"react\";\nimport Leaderboard from \"./leaderboard\";\nimport { startListening } from \"../tenserFlow\";\n\nclass ListenButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.voiceAction = this.voiceAction.bind(this);\n  }\n\n  async voiceAction(labelTensor) {\n    try {\n      if (labelTensor.data) {\n        const command = (await labelTensor.data())[0];\n        this.props.changeVoiceCommandAction(command);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <button\n          id=\"listenButton\"\n          onClick={() => startListening(this.voiceAction)}\n        >\n          Start Listening\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ListenButton;\n",{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":4,"column":3,"nodeType":"200","messageId":"201","endLine":4,"endColumn":12},{"ruleId":"198","severity":1,"message":"202","line":5,"column":3,"nodeType":"200","messageId":"201","endLine":5,"endColumn":13},{"ruleId":"198","severity":1,"message":"203","line":6,"column":3,"nodeType":"200","messageId":"201","endLine":6,"endColumn":17},{"ruleId":"198","severity":1,"message":"204","line":7,"column":3,"nodeType":"200","messageId":"201","endLine":7,"endColumn":16},{"ruleId":"198","severity":1,"message":"205","line":1,"column":57,"nodeType":"200","messageId":"201","endLine":1,"endColumn":64},{"ruleId":"198","severity":1,"message":"206","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":22},{"ruleId":"198","severity":1,"message":"207","line":9,"column":10,"nodeType":"200","messageId":"201","endLine":9,"endColumn":24},{"ruleId":"198","severity":1,"message":"208","line":9,"column":26,"nodeType":"200","messageId":"201","endLine":9,"endColumn":38},{"ruleId":"198","severity":1,"message":"209","line":10,"column":8,"nodeType":"200","messageId":"201","endLine":10,"endColumn":13},{"ruleId":"198","severity":1,"message":"210","line":11,"column":8,"nodeType":"200","messageId":"201","endLine":11,"endColumn":16},{"ruleId":"198","severity":1,"message":"211","line":1,"column":10,"nodeType":"200","messageId":"201","endLine":1,"endColumn":27},{"ruleId":"198","severity":1,"message":"212","line":5,"column":3,"nodeType":"200","messageId":"201","endLine":5,"endColumn":15},{"ruleId":"198","severity":1,"message":"213","line":7,"column":3,"nodeType":"200","messageId":"201","endLine":7,"endColumn":19},{"ruleId":"198","severity":1,"message":"214","line":8,"column":3,"nodeType":"200","messageId":"201","endLine":8,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":104,"column":55,"nodeType":"217","messageId":"218","endLine":104,"endColumn":56},{"ruleId":"219","severity":1,"message":"220","line":14,"column":6,"nodeType":"221","endLine":14,"endColumn":15,"suggestions":"222"},{"ruleId":"219","severity":1,"message":"223","line":27,"column":6,"nodeType":"221","endLine":27,"endColumn":8,"suggestions":"224"},{"ruleId":"198","severity":1,"message":"203","line":3,"column":25,"nodeType":"200","messageId":"201","endLine":3,"endColumn":39},{"ruleId":"198","severity":1,"message":"199","line":3,"column":41,"nodeType":"200","messageId":"201","endLine":3,"endColumn":50},{"ruleId":"198","severity":1,"message":"225","line":6,"column":7,"nodeType":"200","messageId":"201","endLine":6,"endColumn":22},{"ruleId":"198","severity":1,"message":"226","line":17,"column":19,"nodeType":"200","messageId":"201","endLine":17,"endColumn":22},{"ruleId":"198","severity":1,"message":"227","line":23,"column":18,"nodeType":"200","messageId":"201","endLine":23,"endColumn":24},{"ruleId":"198","severity":1,"message":"228","line":28,"column":22,"nodeType":"200","messageId":"201","endLine":28,"endColumn":32},{"ruleId":"198","severity":1,"message":"229","line":34,"column":20,"nodeType":"200","messageId":"201","endLine":34,"endColumn":28},{"ruleId":"198","severity":1,"message":"226","line":17,"column":20,"nodeType":"200","messageId":"201","endLine":17,"endColumn":23},{"ruleId":"198","severity":1,"message":"230","line":22,"column":20,"nodeType":"200","messageId":"201","endLine":22,"endColumn":28},{"ruleId":"198","severity":1,"message":"231","line":27,"column":20,"nodeType":"200","messageId":"201","endLine":27,"endColumn":28},{"ruleId":"198","severity":1,"message":"232","line":33,"column":21,"nodeType":"200","messageId":"201","endLine":33,"endColumn":30},{"ruleId":"198","severity":1,"message":"226","line":19,"column":23,"nodeType":"200","messageId":"201","endLine":19,"endColumn":26},{"ruleId":"198","severity":1,"message":"233","line":25,"column":25,"nodeType":"200","messageId":"201","endLine":25,"endColumn":38},{"ruleId":"198","severity":1,"message":"234","line":30,"column":18,"nodeType":"200","messageId":"201","endLine":30,"endColumn":24},{"ruleId":"198","severity":1,"message":"235","line":36,"column":23,"nodeType":"200","messageId":"201","endLine":36,"endColumn":34},{"ruleId":"198","severity":1,"message":"236","line":43,"column":23,"nodeType":"200","messageId":"201","endLine":43,"endColumn":34},{"ruleId":"198","severity":1,"message":"226","line":11,"column":19,"nodeType":"200","messageId":"201","endLine":11,"endColumn":22},{"ruleId":"198","severity":1,"message":"237","line":17,"column":22,"nodeType":"200","messageId":"201","endLine":17,"endColumn":28},{"ruleId":"198","severity":1,"message":"238","line":24,"column":24,"nodeType":"200","messageId":"201","endLine":24,"endColumn":32},{"ruleId":"198","severity":1,"message":"239","line":31,"column":23,"nodeType":"200","messageId":"201","endLine":31,"endColumn":30},{"ruleId":"198","severity":1,"message":"240","line":38,"column":23,"nodeType":"200","messageId":"201","endLine":38,"endColumn":30},{"ruleId":"198","severity":1,"message":"241","line":45,"column":22,"nodeType":"200","messageId":"201","endLine":45,"endColumn":28},{"ruleId":"198","severity":1,"message":"242","line":52,"column":24,"nodeType":"200","messageId":"201","endLine":52,"endColumn":32},{"ruleId":"198","severity":1,"message":"243","line":59,"column":24,"nodeType":"200","messageId":"201","endLine":59,"endColumn":32},{"ruleId":"198","severity":1,"message":"244","line":66,"column":23,"nodeType":"200","messageId":"201","endLine":66,"endColumn":30},{"ruleId":"198","severity":1,"message":"245","line":73,"column":22,"nodeType":"200","messageId":"201","endLine":73,"endColumn":28},{"ruleId":"198","severity":1,"message":"246","line":80,"column":25,"nodeType":"200","messageId":"201","endLine":80,"endColumn":34},{"ruleId":"198","severity":1,"message":"226","line":11,"column":20,"nodeType":"200","messageId":"201","endLine":11,"endColumn":23},{"ruleId":"198","severity":1,"message":"247","line":5,"column":5,"nodeType":"200","messageId":"201","endLine":5,"endColumn":10},{"ruleId":"198","severity":1,"message":"248","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":19},"no-native-reassign",["249"],"no-negated-in-lhs",["250"],"no-unused-vars","'loadModel' is defined but never used.","Identifier","unusedVar","'buildModel' is defined but never used.","'startListening' is defined but never used.","'stopListening' is defined but never used.","'compose' is defined but never used.","'createLogger' is defined but never used.","'reduxFirestore' is defined but never used.","'getFirestore' is defined but never used.","'thunk' is defined but never used.","'firebase' is defined but never used.","'calcPosFromAngles' is defined but never used.","'getGameState' is defined but never used.","'gameStatePlaying' is defined but never used.","'gameStateWin' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'audio'. Either include it or remove the dependency array.","ArrayExpression",["251"],"React Hook useEffect has missing dependencies: 'audio' and 'toggle'. Either include them or remove the dependency array.",["252"],"'UPDATE_POSITION' is assigned a value but never used.","'api' is assigned a value but never used.","'apiRed' is assigned a value but never used.","'apiPopstar' is assigned a value but never used.","'apiMaria' is assigned a value but never used.","'apiMoney' is assigned a value but never used.","'apiChair' is assigned a value but never used.","'apiPerson' is assigned a value but never used.","'apieaterPlant' is assigned a value but never used.","'apifan' is assigned a value but never used.","'apimedplant' is assigned a value but never used.","'apijuliette' is assigned a value but never used.","'apiTwo' is assigned a value but never used.","'apiThree' is assigned a value but never used.","'apiFour' is assigned a value but never used.","'apiFive' is assigned a value but never used.","'apiSix' is assigned a value but never used.","'apiSeven' is assigned a value but never used.","'apiEight' is assigned a value but never used.","'apiNine' is assigned a value but never used.","'apiTen' is assigned a value but never used.","'apiEleven' is assigned a value but never used.","'words' is defined but never used.","'Leaderboard' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [audio, playing]",{"range":"257","text":"258"},"Update the dependencies array to be: [audio, toggle]",{"range":"259","text":"260"},[369,378],"[audio, playing]",[753,755],"[audio, toggle]"]